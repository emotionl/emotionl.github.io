{"title":"余数","uid":"c83a6d6824f2f22e4599f12b06607ba3","slug":"余数","date":"2019-08-26T00:00:00.000Z","updated":"2021-06-22T10:16:30.101Z","comments":true,"path":"api/articles/余数.json","keywords":"👨‍💻🎸🍺","cover":[],"content":"<h2 id=\"前置知识\"><a href=\"#前置知识\" class=\"headerlink\" title=\"前置知识\"></a>前置知识</h2><p>余数总是在一个固定的范围内。</p>\n<p>整数是没有边界的，它可能是正无穷，也可能是负无穷。但是余数却可以通过某一种关系，让整数处于一个确定的边界内。</p>\n<p>同余定理：简单来说，就是两个整数 a 和 b，如果它们除以正整数 m 得到的余数相等，我们就可以说 a 和 b 对于模 m 同余。</p>\n<p>还有，我们经常提到的奇数和偶数，其实也是同余定理的一个应用。当然，这个应用里，它的模就是 2 了，2 除以 2 余 0，所以它是偶数；3 除以 2 余 1，所以它是奇数。2 和 4 除以 2 的余数都是 0，所以它们都是一类，都是偶数。3 和 5 除以 2 的余数都是 1，所以它们都是一类，都是奇数。</p>\n<p>简单来说， <strong>同余定理其实就是用来分类的</strong> 。你知道，我们有无穷多个整数，那怎么能够全面、多维度地管理这些整数？同余定理就提供了一个思路。</p>\n<p>因为不管你的模是几，最终得到的余数肯定都在一个范围内。比如我们上面除以 7，就得到了星期几；我们除以 2，就得到了奇偶数。所以按照这种方式, 我们就可以<strong>把无穷多个整数分成有限多个类</strong>。</p>\n<h2 id=\"哈希\"><a href=\"#哈希\" class=\"headerlink\" title=\"哈希\"></a>哈希</h2><p>哈希有的时候也会被翻译为散列，简单来说，它就是 <strong>将任意长度的输入，通过哈希算法，压缩为某一固定长度的输出</strong> </p>\n<p><img src=\"./../../assets/image/08.png\" alt=\"07\"></p>\n<p>在这个公式中，x 表示等待被转换的数值，而 size 表示有限存储空间的大小，mod 表示取余操作。 <strong>通过余数，你就能将任何数值，转换为有限范围内的一个数值，然后根据这个新的数值，来确定将数据存放在何处</strong>。</p>\n<p>让我以加密算法为例，举个例子，比如说我们要加密一组三位数，那我们设定一个这样的加密规则：</p>\n<ol>\n<li>先对每个三位数的个、十和百位数，都加上一个较大的随机数</li>\n<li>然后将每位上的数都除以 7，用所得的余数代替原有的个、十、百位数</li>\n<li>最后将第一位和第三位交换。</li>\n</ol>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">&#x2F;&#x2F; 加密\nconst hashEncrypt &#x3D; (value, salt) &#x3D;&gt; &#123;\n    let valueList &#x3D; String(value).split(&#39;&#39;).map(item &#x3D;&gt; +item)\n    let result &#x3D; valueList.map(item &#x3D;&gt; &#123;\n        let quotient &#x3D; Math.floor((item + salt) &#x2F; 7)\n        let rem &#x3D; (item + salt) % 7\n        return &#123;\n            quotient,\n            rem\n        &#125;\n    &#125;)\n    let encryptValue &#x3D; +result.map(item &#x3D;&gt; item.rem).reverse().join(&#39;&#39;)\n    let iv &#x3D; result.map(item &#x3D;&gt; item.quotient)\n    return &#123;\n        encryptValue,\n        iv\n    &#125;\n&#125;\n&#x2F;&#x2F; 解密\nconst hashDecrypt &#x3D; (value, iv, salt) &#x3D;&gt; &#123;\n    let valueList &#x3D; String(value).split(&#39;&#39;).reverse().map(item &#x3D;&gt; +item)\n    let result &#x3D; valueList.map((item, index) &#x3D;&gt; &#123;\n        return iv[index] * 7 + item - salt\n    &#125;)\n    let decryptValue &#x3D; +result.join(&#39;&#39;)\n    return decryptValue\n&#125;\n\nlet testValue &#x3D; 751\nlet salt &#x3D; 4523645\nlet &#123; encryptValue, iv &#125; &#x3D; hashEncrypt(testValue, salt)\nlet decryptValue &#x3D; hashDecrypt(encryptValue, iv, salt)</code></pre>\n","text":"前置知识余数总是在一个固定的范围内。 整数是没有边界的，它可能是正无穷，也可能是负无穷。但是余数却可以通过某一种关系，让整数处于一个确定的边界内。 同余定理：简单来说，就是两个整数 a 和 b，如果它们除以正整数 m 得到的余数相等，我们就可以说 a 和 b 对于模 m 同余。 ...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"基础","slug":"基础","count":9,"path":"api/categories/基础.json"}],"tags":[{"name":"数学","slug":"数学","count":5,"path":"api/tags/数学.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%89%8D%E7%BD%AE%E7%9F%A5%E8%AF%86\"><span class=\"toc-text\">前置知识</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%93%88%E5%B8%8C\"><span class=\"toc-text\">哈希</span></a></li></ol>","author":{"name":"ZV","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"致过去的时光","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"二进制","uid":"55fb07a4dbf6f44614d26c9d54b2e72f","slug":"二进制","date":"2019-08-26T00:00:00.000Z","updated":"2021-06-22T10:16:30.101Z","comments":true,"path":"api/articles/二进制.json","keywords":"👨‍💻🎸🍺","cover":null,"text":"什么是二进制计数法？53 的十进制表达 53 &#x3D; 5*10^1 + 3*10^0 53 的二进制表达 53 &#x3D; 1*2^5 + 1*2^4 + 0*2^3 + 1*2^2 + 0*2^1 + 1*2^0 JavaScript 中 Number.prototyp...","link":"","photos":[],"count_time":{"symbolsCount":981,"symbolsTime":"1 mins."},"categories":[{"name":"基础","slug":"基础","count":9,"path":"api/categories/基础.json"}],"tags":[{"name":"数学","slug":"数学","count":5,"path":"api/tags/数学.json"}],"author":{"name":"ZV","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"致过去的时光","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"关于进制的思考","uid":"15d1e9457069635d443cc237473de367","slug":"关于进制的思考","date":"2019-08-26T00:00:00.000Z","updated":"2021-06-22T10:16:30.101Z","comments":true,"path":"api/articles/关于进制的思考.json","keywords":"👨‍💻🎸🍺","cover":null,"text":"三个基本类型 int float char 总结 bit 二进制位 计算机用来存储数据最基本的单位是电子管 有两种状态开启和关闭 即 0 和 1 这两种可能 对应到计算机中的存储单位就是 bit n个bit可以表示 0 ~ 2^n - 1 这个区间的数 二进制 十进制 0 0 1...","link":"","photos":[],"count_time":{"symbolsCount":"2.7k","symbolsTime":"2 mins."},"categories":[{"name":"基础","slug":"基础","count":9,"path":"api/categories/基础.json"}],"tags":[{"name":"数学","slug":"数学","count":5,"path":"api/tags/数学.json"}],"author":{"name":"ZV","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"致过去的时光","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}