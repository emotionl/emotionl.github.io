{"title":"字符串的比较","uid":"7439e52dfcec57c3f9d78c17402f5261","slug":"字符串的比较","date":"2019-10-16T00:00:00.000Z","updated":"2021-06-22T10:16:30.101Z","comments":true,"path":"api/articles/字符串的比较.json","keywords":"👨‍💻🎸🍺","cover":null,"content":"<p>初次碰到 <code>&#39;100&#39; &gt; &#39;99&#39;</code> 这个问题的时候还是有点懵逼的，因为这种比较也不涉及之前所想的隐式类型转换，</p>\n<p>通过几次试验，发现<code>JS</code>中字符串与字符串比较是根据第一个不同的字符的ASCii值码进行比较的。</p>\n<p>举个例子</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">&#39;100&#39; &gt; &#39;99&#39;\n&#x2F;&#x2F; 1. &#39;100&#39;.charCodeAt(0) &#x3D;&#x3D;&#x3D; 49\n&#x2F;&#x2F; 2. &#39;99&#39;.charCodeAt(0) &#x3D;&#x3D;&#x3D; 57\n&#x2F;&#x2F; 3. 49 &lt; 57 所以结果为 false</code></pre>\n\n<p>在来一个有隐式转换的例子</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">[&#39;100&#39;] &gt; 99\n&#x2F;&#x2F; 1. 对象类型与其他类型比较 对象类型会转换为原始值 [&#39;100&#39;] &#x3D;&#x3D;&gt; &#39;100&#39;\n&#x2F;&#x2F; 2. 字符串与数字类型比较，字符串会变为数字 &#39;100&#39; &#x3D;&#x3D;&gt; 100\n&#x2F;&#x2F; 3. 100 &gt; 99 所以结果为 true</code></pre>\n\n\n\n","text":"初次碰到 &#39;100&#39; &gt; &#39;99&#39; 这个问题的时候还是有点懵逼的，因为这种比较也不涉及之前所想的隐式类型转换， 通过几次试验，发现JS中字符串与字符串比较是根据第一个不同的字符的ASCii值码进行比较的。 举个例子 &#39;100&#39;...","link":"","photos":[],"count_time":{"symbolsCount":567,"symbolsTime":"1 mins."},"categories":[{"name":"前端","slug":"前端","count":17,"path":"api/categories/前端.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":14,"path":"api/tags/JavaScript.json"}],"toc":"","author":{"name":"ZV","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"致过去的时光","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"前端项目中的路径解析","uid":"78228826ae557ad432664d25fe0da568","slug":"前端项目中的路径解析","date":"2019-11-21T00:00:00.000Z","updated":"2021-06-22T10:16:30.101Z","comments":true,"path":"api/articles/前端项目中的路径解析.json","keywords":"👨‍💻🎸🍺","cover":null,"text":"这里说的路径解析分两种 Webpack打包配置项中的 alias jsconfig.json中的 compilerOptions Webpack 打包配置项中的 alias相信很多人都很喜欢这个配置，因为在引用其他目录下的文件时，通过 ./../utils/tools.js这种写...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"前端","slug":"前端","count":17,"path":"api/categories/前端.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":14,"path":"api/tags/JavaScript.json"},{"name":"Webpack","slug":"Webpack","count":1,"path":"api/tags/Webpack.json"}],"author":{"name":"ZV","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"致过去的时光","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"自定义Linux登录页面","uid":"8551a057987c47b63b4bd98874d26a3d","slug":"自定义Linux登录页面","date":"2019-09-04T00:00:00.000Z","updated":"2021-06-22T10:16:30.101Z","comments":true,"path":"api/articles/自定义Linux登录页面.json","keywords":"👨‍💻🎸🍺","cover":[],"text":" 在 VSCode 中下载 ASCIIDecorator 使用 ASCIIDecorator创建字符画 使用 vim或 nano打开 /etc/motd把上一步生成的字符画拷贝进来即可 最后 ","link":"","photos":[],"count_time":{"symbolsCount":103,"symbolsTime":"1 mins."},"categories":[{"name":"运维","slug":"运维","count":5,"path":"api/categories/运维.json"}],"tags":[{"name":"Linux","slug":"Linux","count":3,"path":"api/tags/Linux.json"}],"author":{"name":"ZV","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"致过去的时光","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}