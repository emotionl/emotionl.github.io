{"title":"MongoDB 高级查询","uid":"e5fb6a3fd97ef95b02d7d5beaa06b7e3","slug":"MongoDB高级查询","date":"2019-08-26T00:00:00.000Z","updated":"2021-06-22T10:16:30.101Z","comments":true,"path":"api/articles/MongoDB高级查询.json","keywords":"👨‍💻🎸🍺","cover":null,"content":"<h2 id=\"MongoDB-聚合管道\"><a href=\"#MongoDB-聚合管道\" class=\"headerlink\" title=\"MongoDB 聚合管道\"></a>MongoDB 聚合管道</h2><p>使用聚合管道可以对集合中的文档进行变换和组合<br>实际运用：表关联查询、数据的统计<br><code>MongoDB</code> 中使用 <code>db.COLLECTION_NAME.aggregate([&#123;&#125;,...])</code> 方法来构建和使用聚合管道</p>\n<h2 id=\"Aggregation-Pipeline-Stages-amp-Operators\"><a href=\"#Aggregation-Pipeline-Stages-amp-Operators\" class=\"headerlink\" title=\"Aggregation Pipeline Stages &amp; Operators\"></a>Aggregation Pipeline Stages &amp; Operators</h2><h3 id=\"Stages-操作\"><a href=\"#Stages-操作\" class=\"headerlink\" title=\"Stages 操作\"></a>Stages 操作</h3><table>\n<thead>\n<tr>\n<th>操作符 S</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>$project</code></td>\n<td>修改输入文档的结构。可以用来重命名、增加或删除域，也可以用于创建计算结果以及嵌套文档</td>\n</tr>\n<tr>\n<td><code>$match</code></td>\n<td>用于过滤数据，只输出符合条件的文档。<code>$match</code> 使用 MongoDB 的标准查询操作</td>\n</tr>\n<tr>\n<td><code>$limit</code></td>\n<td>用来限制 MongoDB 聚合管道返回的文档数</td>\n</tr>\n<tr>\n<td><code>$skip</code></td>\n<td>在聚合管道中跳过指定数量的文档，并返回余下的文档</td>\n</tr>\n<tr>\n<td><code>$group</code></td>\n<td>将集合中的文档分组，可用于统计结果</td>\n</tr>\n<tr>\n<td><code>$sort</code></td>\n<td>将输入文档排序后输出</td>\n</tr>\n<tr>\n<td><code>$lookup</code></td>\n<td>用以引入其它集合的数据 （表关联查询）</td>\n</tr>\n</tbody></table>\n<h3 id=\"Operators-运算符\"><a href=\"#Operators-运算符\" class=\"headerlink\" title=\"Operators 运算符\"></a>Operators 运算符</h3><table>\n<thead>\n<tr>\n<th align=\"left\">Operators</th>\n<th align=\"left\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\"><code>$sum</code></td>\n<td align=\"left\">计算总和</td>\n</tr>\n<tr>\n<td align=\"left\"><code>$avg</code></td>\n<td align=\"left\">计算平均值</td>\n</tr>\n<tr>\n<td align=\"left\"><code>$min</code></td>\n<td align=\"left\">获取集合中所有文档对应值得最小值</td>\n</tr>\n<tr>\n<td align=\"left\"><code>$max</code></td>\n<td align=\"left\">获取集合中所有文档对应值得最大值</td>\n</tr>\n<tr>\n<td align=\"left\"><code>$push</code></td>\n<td align=\"left\">在结果文档中插入值到一个数组中</td>\n</tr>\n<tr>\n<td align=\"left\"><code>$addToSet</code></td>\n<td align=\"left\">在结果文档中插入值到一个数组中，但不创建副本</td>\n</tr>\n<tr>\n<td align=\"left\"><code>$first</code></td>\n<td align=\"left\">根据资源文档的排序获取第一个文档数据</td>\n</tr>\n<tr>\n<td align=\"left\"><code>$last</code></td>\n<td align=\"left\">根据资源文档的排序获取最后一个文档数据</td>\n</tr>\n</tbody></table>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>管道操作符作为<strong>键</strong>，所对应的<strong>值</strong>叫做管道表达式<br>例如<code>&#123;$match:&#123;status:&quot;A&quot;&#125;&#125;</code>，<code>$match</code> 称为管道操作符，而 <code>status:&quot;A&quot;</code>称为管道表达式<br>每个管道表达式是一个文档结构，它是由字段名、字段值、和一些表达式操作符组成的</p></blockquote>\n<h2 id=\"数据模拟\"><a href=\"#数据模拟\" class=\"headerlink\" title=\"数据模拟\"></a>数据模拟</h2><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">db.order.insert(&#123;&quot;order_id&quot;:&quot;1&quot;,&quot;uid&quot;:10,&quot;trade_no&quot;:&quot;111&quot;,&quot;all_price&quot;:100,&quot;all_num&quot;:2&#125;)\ndb.order.insert(&#123;&quot;order_id&quot;:&quot;2&quot;,&quot;uid&quot;:7,&quot;trade_no&quot;:&quot;222&quot;,&quot;all_price&quot;:90,&quot;all_num&quot;:2&#125;)\ndb.order.insert(&#123;&quot;order_id&quot;:&quot;3&quot;,&quot;uid&quot;:9,&quot;trade_no&quot;:&quot;333&quot;,&quot;all_price&quot;:20,&quot;all_num&quot;:6&#125;)\ndb.order_item.insert(&#123;&quot;order_id&quot;:&quot;1&quot;,&quot;title&quot;:&quot;商品鼠标 1&quot;,&quot;price&quot;:50,num:1&#125;)\ndb.order_item.insert(&#123;&quot;order_id&quot;:&quot;1&quot;,&quot;title&quot;:&quot;商品键盘 2&quot;,&quot;price&quot;:50,num:1&#125;)\ndb.order_item.insert(&#123;&quot;order_id&quot;:&quot;1&quot;,&quot;title&quot;:&quot;商品键盘 3&quot;,&quot;price&quot;:0,num:1&#125;)\ndb.order_item.insert(&#123;&quot;order_id&quot;:&quot;2&quot;,&quot;title&quot;:&quot;牛奶&quot;,&quot;price&quot;:50,num:1&#125;)\ndb.order_item.insert(&#123;&quot;order_id&quot;:&quot;2&quot;,&quot;title&quot;:&quot;酸奶&quot;,&quot;price&quot;:40,num:1&#125;)\ndb.order_item.insert(&#123;&quot;order_id&quot;:&quot;3&quot;,&quot;title&quot;:&quot;矿泉水&quot;,&quot;price&quot;:2,num:5&#125;)\ndb.order_item.insert(&#123;&quot;order_id&quot;:&quot;3&quot;,&quot;title&quot;:&quot;毛巾&quot;,&quot;price&quot;:10,num:1&#125;)</code></pre>\n\n<h2 id=\"project\"><a href=\"#project\" class=\"headerlink\" title=\"$project\"></a>$project</h2><p>自定义文档的结构，可以用来重命名、增加或删除文档中的字段</p>\n<p>查找 order 只返回文档中 trade_no 和 all_price 字段</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">db.order.aggregate([\n    &#123;\n        $project: &#123;\n            trade_no: 1,\n            all_price: 1\n        &#125;\n    &#125;\n])</code></pre>\n\n<h2 id=\"match\"><a href=\"#match\" class=\"headerlink\" title=\"$match\"></a>$match</h2><p>过滤。用法类似于 <code>find()</code> 方法中的参数</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">db.order.aggregate([\n    &#123;\n        $project: &#123; trade_no: 1, all_price: 1 &#125;\n    &#125;,\n    &#123;\n        $match: &#123; all_price: &#123; $gte: 90 &#125; &#125;\n    &#125;\n])</code></pre>\n\n<h2 id=\"group\"><a href=\"#group\" class=\"headerlink\" title=\"$group\"></a>$group</h2><p>分组，可用于统计结果</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">db.order_item.aggregate([\n    &#123;\n        $group: &#123; _id: &#39;$order_id&#39;, total: &#123; $sum: &#39;$num&#39; &#125; &#125;\n    &#125;\n])</code></pre>\n\n<h2 id=\"sort\"><a href=\"#sort\" class=\"headerlink\" title=\"$sort\"></a>$sort</h2><p>排序</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">db.order.aggregate([\n    &#123;\n        $project: &#123; trade_no: 1, all_price: 1 &#125;\n    &#125;,\n    &#123;\n        $sort: &#123; all_price: -1 &#125;\n    &#125;\n])</code></pre>\n\n<h2 id=\"limit\"><a href=\"#limit\" class=\"headerlink\" title=\"$limit\"></a>$limit</h2><p>限制数量</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">db.order.aggregate([\n    &#123;\n        $project: &#123; trade_no: 1, all_price: 1 &#125;\n    &#125;,\n    &#123;\n        $limit: 1\n    &#125;\n])</code></pre>\n\n<h2 id=\"skip\"><a href=\"#skip\" class=\"headerlink\" title=\"$skip\"></a>$skip</h2><p>跳过</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">db.order.aggregate([\n    &#123;\n        $project: &#123; trade_no: 1, all_price: 1 &#125;\n    &#125;,\n    &#123;\n        $skip: 1\n    &#125;\n])</code></pre>\n\n<h2 id=\"lookup\"><a href=\"#lookup\" class=\"headerlink\" title=\"$lookup\"></a>$lookup</h2><p>表关联</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">db.order.aggregate([\n    &#123;\n        $lookup: &#123;\n            from: &#39;order_item&#39;,\n            localField: &#39;order_id&#39;,\n            foreignField: &#39;order_id&#39;,\n            as: &#39;items&#39;\n        &#125;\n    &#125;\n])</code></pre>\n\n<h2 id=\"综合运用\"><a href=\"#综合运用\" class=\"headerlink\" title=\"综合运用\"></a>综合运用</h2><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">db.order.aggregate([\n    &#123;\n        $lookup: &#123;\n            from: &#39;order_item&#39;,\n            localField: &#39;order_id&#39;,\n            foreignField: &#39;order_id&#39;,\n            as: &#39;items&#39;\n        &#125;\n    &#125;,\n    &#123;\n        $match: &#123;\n            all_price: &#123;\n                $gt: 90\n            &#125;\n        &#125;\n    &#125;,\n    &#123;\n        $project: &#123;\n            items: 1\n        &#125;\n    &#125;\n])\n</code></pre>\n\n","text":"MongoDB 聚合管道使用聚合管道可以对集合中的文档进行变换和组合实际运用：表关联查询、数据的统计MongoDB 中使用 db.COLLECTION_NAME.aggregate([&#123;&#125;,...]) 方法来构建和使用聚合管道 Aggregation Pipe...","link":"","photos":[],"count_time":{"symbolsCount":"4.1k","symbolsTime":"4 mins."},"categories":[{"name":"数据库","slug":"数据库","count":2,"path":"api/categories/数据库.json"}],"tags":[{"name":"MongoDB","slug":"MongoDB","count":2,"path":"api/tags/MongoDB.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#MongoDB-%E8%81%9A%E5%90%88%E7%AE%A1%E9%81%93\"><span class=\"toc-text\">MongoDB 聚合管道</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Aggregation-Pipeline-Stages-amp-Operators\"><span class=\"toc-text\">Aggregation Pipeline Stages &amp; Operators</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Stages-%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">Stages 操作</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Operators-%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">Operators 运算符</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%95%B0%E6%8D%AE%E6%A8%A1%E6%8B%9F\"><span class=\"toc-text\">数据模拟</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#project\"><span class=\"toc-text\">$project</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#match\"><span class=\"toc-text\">$match</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#group\"><span class=\"toc-text\">$group</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#sort\"><span class=\"toc-text\">$sort</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#limit\"><span class=\"toc-text\">$limit</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#skip\"><span class=\"toc-text\">$skip</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#lookup\"><span class=\"toc-text\">$lookup</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%BB%BC%E5%90%88%E8%BF%90%E7%94%A8\"><span class=\"toc-text\">综合运用</span></a></li></ol>","author":{"name":"ZV","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"致过去的时光","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Nginx 反向代理","uid":"4f3559b97c389436f045f114bdd6b998","slug":"Nginx反向代理","date":"2019-08-27T00:00:00.000Z","updated":"2021-06-22T10:16:30.101Z","comments":true,"path":"api/articles/Nginx反向代理.json","keywords":"👨‍💻🎸🍺","cover":null,"text":"真实应用背景一台阿里云 ECS，一个域名 需求emotionl.fun 的二级域名分别指向服务器的两个服务 实现思路使用nginx的upstream控制上游服务器，用proxy_pass进行反向代理 操作 使用第一台 nginx 开启两个静态服务 worker_processes...","link":"","photos":[],"count_time":{"symbolsCount":"2.4k","symbolsTime":"2 mins."},"categories":[{"name":"运维","slug":"运维","count":5,"path":"api/categories/运维.json"}],"tags":[{"name":"Nginx","slug":"Nginx","count":3,"path":"api/tags/Nginx.json"}],"author":{"name":"ZV","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"致过去的时光","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"二进制","uid":"55fb07a4dbf6f44614d26c9d54b2e72f","slug":"二进制","date":"2019-08-26T00:00:00.000Z","updated":"2021-06-22T10:16:30.101Z","comments":true,"path":"api/articles/二进制.json","keywords":"👨‍💻🎸🍺","cover":null,"text":"什么是二进制计数法？53 的十进制表达 53 &#x3D; 5*10^1 + 3*10^0 53 的二进制表达 53 &#x3D; 1*2^5 + 1*2^4 + 0*2^3 + 1*2^2 + 0*2^1 + 1*2^0 JavaScript 中 Number.prototyp...","link":"","photos":[],"count_time":{"symbolsCount":981,"symbolsTime":"1 mins."},"categories":[{"name":"基础","slug":"基础","count":9,"path":"api/categories/基础.json"}],"tags":[{"name":"数学","slug":"数学","count":5,"path":"api/tags/数学.json"}],"author":{"name":"ZV","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"致过去的时光","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}