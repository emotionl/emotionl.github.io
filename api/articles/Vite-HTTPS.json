{"title":"Vite 在开发模式使用 HTTPS","uid":"4463bcb580e6af97fe7a8a01ae296a7e","slug":"Vite-HTTPS","date":"2021-06-21T03:06:53.000Z","updated":"2021-06-22T10:16:30.101Z","comments":true,"path":"api/articles/Vite-HTTPS.json","keywords":"👨‍💻🎸🍺","cover":null,"content":"<p>在使用 Vite 进行前端开发的过程中，有时需要模拟一下 HTTPS 的环境（比如开启 PWA），但是如果直接设置<code>server.https = true</code>，浏览器会报<strong>您的连接不是私密连接</strong>这样的警告，那么该怎么做呢？</p>\n<p>仔细的查看了下文档，发现已经说的很清晰了<code>server.https</code>这个值也可以是一个传递给 <code>https.createServer()</code> 的 <a href=\"https://nodejs.org/api/https.html#https_https_createserver_options_requestlistener\">选项对象</a>。下面是示例</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">&#x2F;&#x2F; curl -k https:&#x2F;&#x2F;localhost:8000&#x2F;\nconst https &#x3D; require(&#39;https&#39;)\nconst fs &#x3D; require(&#39;fs&#39;)\n\nconst options &#x3D; &#123;\n  key: fs.readFileSync(&#39;test&#x2F;fixtures&#x2F;keys&#x2F;agent2-key.pem&#39;),\n  cert: fs.readFileSync(&#39;test&#x2F;fixtures&#x2F;keys&#x2F;agent2-cert.pem&#39;)\n&#125;\n\nhttps\n  .createServer(options, (req, res) &#x3D;&gt; &#123;\n    res.writeHead(200)\n    res.end(&#39;hello world\\n&#39;)\n  &#125;)\n  .listen(8000)</code></pre>\n\n<p>我们要做的就是把 <code>options</code> 赋值给 <code>server.https</code>。当然还需要借助工具去生成 key 和 cert。</p>\n<h2 id=\"操作步骤\"><a href=\"#操作步骤\" class=\"headerlink\" title=\"操作步骤\"></a>操作步骤</h2><ol>\n<li><p>安装 <a href=\"https://github.com/FiloSottile/mkcert\">mkcert</a></p>\n<p>我使用的是 Win10，就使用 choco 来安装了</p>\n<pre class=\"line-numbers language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\">choco install mkcert</code></pre>\n</li>\n<li><p>生成 key 和 cert</p>\n<p>为了便于管理我在项目的根目录下创建了 ssl 文件夹</p>\n<pre class=\"line-numbers language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\">mkdir ssl\ncd ssl\nmkcert localhost</code></pre>\n\n<p>操作完成后你会发现 ssl 目录下多了两个文件，也就是我们需要的 key 和 cert</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">ssl\n├── localhost-key.pem\n└── localhost.pem</code></pre>\n</li>\n<li><p>配置 vite.config.js</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">import &#123; defineConfig &#125; from &#39;vite&#39;\nimport path from &#39;path&#39;\nimport fs from &#39;fs&#39;\n\nexport default defineConfig(&#123;\n  server: &#123;\n    https: &#123;\n      key: fs.readFileSync(path.resolve(__dirname, &#39;.&#x2F;ssl&#x2F;localhost-key.pem&#39;)),\n      cert: fs.readFileSync(path.resolve(__dirname, &#39;.&#x2F;ssl&#x2F;localhost.pem&#39;))\n    &#125;\n  &#125;\n&#125;)</code></pre>\n\n<p>下次在启动就能看到地址栏上的小锁头了 🔒</p>\n</li>\n</ol>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><a href=\"https://penueling.com/%E6%8A%80%E8%A1%93%E7%AD%86%E8%A8%98/%E8%A6%81%E6%80%8E%E9%BA%BC%E8%AE%93localhost%E4%B9%9F%E5%8F%AF%E4%BB%A5%E6%9C%89https%E6%86%91%E8%AD%89%EF%BC%9F/\">[vite 要怎麼讓 localhost 也可以有 https 憑證？](https://penueling.com/技術筆記/要怎麼讓 localhost 也可以有 https 憑證？/)</a></p></blockquote>\n","text":"在使用 Vite 进行前端开发的过程中，有时需要模拟一下 HTTPS 的环境（比如开启 PWA），但是如果直接设置server.https = true，浏览器会报您的连接不是私密连接这样的警告，那么该怎么做呢？ 仔细的查看了下文档，发现已经说的很清晰了server.https这...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"前端","slug":"前端","count":17,"path":"api/categories/前端.json"}],"tags":[{"name":"Vite","slug":"Vite","count":1,"path":"api/tags/Vite.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%93%8D%E4%BD%9C%E6%AD%A5%E9%AA%A4\"><span class=\"toc-text\">操作步骤</span></a></li></ol>","author":{"name":"ZV","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"致过去的时光","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{},"next_post":{"title":"C数据类型","uid":"91073ca00ced3eaf093ce066e8170e85","slug":"C数据类型","date":"2021-06-18T02:52:41.000Z","updated":"2021-06-22T10:16:30.101Z","comments":true,"path":"api/articles/C数据类型.json","keywords":"👨‍💻🎸🍺","cover":null,"text":"整型#include &lt;limits.h&gt; #include &lt;math.h&gt; #include &lt;stdio.h&gt; int main( int argc, char* argv[] ) &#123; &#x2F;* 有符号整形 *&#x2F;...","link":"","photos":[],"count_time":{"symbolsCount":"6.5k","symbolsTime":"6 mins."},"categories":[{"name":"拓展","slug":"拓展","count":10,"path":"api/categories/拓展.json"}],"tags":[{"name":"C","slug":"C","count":2,"path":"api/tags/C.json"}],"author":{"name":"ZV","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"致过去的时光","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}