{"title":"面向对象和原型","uid":"ee82dc5d42257715d56dbfc6d3d2929b","slug":"面向对象和原型","date":"2020-05-29T00:00:00.000Z","updated":"2021-06-22T10:16:30.101Z","comments":true,"path":"api/articles/面向对象和原型.json","keywords":"👨‍💻🎸🍺","cover":null,"content":"<h2 id=\"实现-new-操作\"><a href=\"#实现-new-操作\" class=\"headerlink\" title=\"实现 new 操作\"></a>实现 <code>new</code> 操作</h2><p>首先，我们先来看看<code>new</code>操作起了什么作用</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">&#x2F;&#x2F; 构造函数 People (无显式返回值)\nfunction People(name, age) &#123;\n  this.name &#x3D; name\n  this.age &#x3D; age\n&#125;\n\nPeople.prototype.printInfo &#x3D; function () &#123;\n  return &#96;My name is $&#123;this.name&#125; and $&#123;this.age&#125;&#96;\n&#125;\n\n&#x2F;&#x2F; 构造函数 Student (有显式返回值，且返回值为对象类型)\nfunction Student(name) &#123;\n  this.name &#x3D; name\n  return &#123; ps: &#39;balabala&#39; &#125;\n&#125;\n\nconst p1 &#x3D; new People(&#39;Jack&#39;, 17)\nconst s1 &#x3D; new Student(&#39;David&#39;)\nconsole.log(p1.name)        &#x2F;&#x2F; Jack\nconsole.log(p1.age)         &#x2F;&#x2F; 17\nconsole.log(p1.printInfo()) &#x2F;&#x2F; My name is Jack and 17\nconsole.log(s1)             &#x2F;&#x2F; &#123;ps: &quot;balabala&quot;&#125;</code></pre>\n\n<p>可以看出 <code>new</code>关键字大体上有一下几个作用</p>\n<ul>\n<li>构造函数无显式返回值时（例如<code>Person</code>），通过<code>new</code>操作得到的<code>p1</code> 可以访问到构造函数<code>Person</code>里的属性和<code>Person.prototype</code>里的属性</li>\n<li>构造函数有显式返回值并且返回值为对象类型时（例如<code>Student</code>），通过<code>new</code>操作得到的<code>s1</code>是构造函数的显示返回值<code>&#123;ps: &quot;balabala&quot;&#125;</code></li>\n</ul>\n<p>基于以上的内容，我们来实现一个<code>new</code>操作</p>\n<ol>\n<li>首先创建一个空对象，这个对象将会作为执行 <code>new 构造函数()</code> 之后，返回的对象实例</li>\n<li>将上面创建的空对象的原型（<code>__proto__</code>），指向构造函数的 prototype 属性</li>\n<li>将这个空对象赋值给构造函数内部的 <code>this</code>，并执行构造函数逻辑</li>\n<li>根据构造函数执行逻辑，返回第一步创建的对象或者构造函数的显式返回值</li>\n</ol>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">const neo &#x3D; (Con, ...args) &#x3D;&gt; &#123;\n  const obj &#x3D; Object.create(Con.prototype)\n  const result &#x3D; Con.apply(obj, args)\n  return typeof result &#x3D;&#x3D;&#x3D; &#39;object&#39; ? result : obj\n&#125;\n\nconst p2 &#x3D; neo(People, &#39;Jason&#39;, 18)\nconst s2 &#x3D; neo(Student, &#39;Doug&#39;)\nconsole.log(p2)\nconsole.log(s2)</code></pre>\n\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><a href=\"https://github.com/mqyqingfeng/Blog/issues/13\">JavaScript深入之new的模拟实现</a></p>\n<p><a href=\"https://www.jianshu.com/p/aa2f885ba871\">深入浅出JS对象原型</a></p></blockquote>\n","text":"实现 new 操作首先，我们先来看看new操作起了什么作用 &#x2F;&#x2F; 构造函数 People (无显式返回值) function People(name, age) &#123; this.name &#x3D; name this.age &#x3D; age ...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"前端","slug":"前端","count":17,"path":"api/categories/前端.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":14,"path":"api/tags/JavaScript.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E7%8E%B0-new-%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">实现 new 操作</span></a></li></ol>","author":{"name":"ZV","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"致过去的时光","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"给我来棵二叉树","uid":"f24dd06beb414de62fa30f4650dc3e1e","slug":"给我来棵二叉树","date":"2020-05-29T00:00:00.000Z","updated":"2021-06-22T10:16:30.101Z","comments":true,"path":"api/articles/给我来棵二叉树.json","keywords":"👨‍💻🎸🍺","cover":null,"text":"&#x2F;&#x2F; 声明节点 class Node &#123; constructor(key) &#123; this.key &#x3D; key this.left &#x3D; null this.right &#x3D; null &#125; &#125; c...","link":"","photos":[],"count_time":{"symbolsCount":"6.5k","symbolsTime":"6 mins."},"categories":[{"name":"基础","slug":"基础","count":9,"path":"api/categories/基础.json"}],"tags":[{"name":"算法","slug":"算法","count":4,"path":"api/tags/算法.json"}],"author":{"name":"ZV","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"致过去的时光","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"正则案例4","uid":"77f168ffc056e7b3c8afc931856a7b37","slug":"正则案例4","date":"2020-05-28T00:00:03.000Z","updated":"2021-06-22T10:16:30.101Z","comments":true,"path":"api/articles/正则案例4.json","keywords":"👨‍💻🎸🍺","cover":null,"text":"需求根据需求匹配数据并提取所需数据 处理前 const textList &#x3D; [ &#39;@[]&#39;, &#x2F;&#x2F; 不匹配 &#39;@[123]&#39;, &#x2F;&#x2F; 不匹配 &#39;@asd[133]&#39;, &#x2F;...","link":"","photos":[],"count_time":{"symbolsCount":"2.6k","symbolsTime":"2 mins."},"categories":[{"name":"拓展","slug":"拓展","count":10,"path":"api/categories/拓展.json"}],"tags":[{"name":"正则","slug":"正则","count":4,"path":"api/tags/正则.json"}],"author":{"name":"ZV","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"致过去的时光","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}