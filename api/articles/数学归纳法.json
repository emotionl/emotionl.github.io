{"title":"数学归纳法","uid":"be2d23ba3555cc49cd98054b66cb7fb6","slug":"数学归纳法","date":"2020-03-31T00:00:00.000Z","updated":"2021-06-22T10:16:30.101Z","comments":true,"path":"api/articles/数学归纳法.json","keywords":"👨‍💻🎸🍺","cover":null,"content":"<p>对于类似这种无穷数列的问题，我们通常可以采用<strong>数学归纳法（Mathematical Induction）</strong>来证明。</p>\n<p>在数论中，数学归纳法用来证明任意一个给定的情形都是正确的，也就是说，第一个、第二个、第三个，一直到所有情形，概不例外。</p>\n<p>数学归纳法的一般步骤是这样的：</p>\n<ul>\n<li>证明基本情况（通常是 <code>n = 1</code> 的时候）是否成立；</li>\n<li>假设 <code>n = k − 1</code> 成立，再证明 <code>n = k</code> 也是成立的（k 为任意大于 11 的自然数）</li>\n</ul>\n<h2 id=\"迭代-VS-数学归纳法\"><a href=\"#迭代-VS-数学归纳法\" class=\"headerlink\" title=\"迭代 VS 数学归纳法\"></a>迭代 VS 数学归纳法</h2><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">const TOTAL_GRID &#x3D; 64\n\n&#x2F;&#x2F; 迭代法\nconst iterativeFunc &#x3D; totalGrid &#x3D;&gt; &#123;\n  let currentGrid &#x3D; 0\n  let sum &#x3D; 0\n  while (currentGrid &lt; totalGrid) &#123;\n    sum +&#x3D; 1 * Math.pow(2, currentGrid)\n    currentGrid +&#x3D; 1\n  &#125;\n  return sum\n&#125;\n&#x2F;&#x2F; 数学归纳法\nconst inductionFunc &#x3D; totalGrid &#x3D;&gt; Math.pow(2, totalGrid) - 1\n\nconst res1 &#x3D; iterativeFunc(TOTAL_GRID)\nconst res2 &#x3D; inductionFunc(TOTAL_GRID)</code></pre>\n","text":"对于类似这种无穷数列的问题，我们通常可以采用数学归纳法（Mathematical Induction）来证明。 在数论中，数学归纳法用来证明任意一个给定的情形都是正确的，也就是说，第一个、第二个、第三个，一直到所有情形，概不例外。 数学归纳法的一般步骤是这样的： 证明基本情况（通...","link":"","photos":[],"count_time":{"symbolsCount":694,"symbolsTime":"1 mins."},"categories":[{"name":"基础","slug":"基础","count":9,"path":"api/categories/基础.json"}],"tags":[{"name":"数学","slug":"数学","count":5,"path":"api/tags/数学.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%AD%E4%BB%A3-VS-%E6%95%B0%E5%AD%A6%E5%BD%92%E7%BA%B3%E6%B3%95\"><span class=\"toc-text\">迭代 VS 数学归纳法</span></a></li></ol>","author":{"name":"ZV","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"致过去的时光","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Better-Scroll使用小例子","uid":"82b2c0d9626305e58241dff00b52469b","slug":"Better-Scroll使用小例子","date":"2020-04-03T00:00:00.000Z","updated":"2021-06-22T10:16:30.101Z","comments":true,"path":"api/articles/Better-Scroll使用小例子.json","keywords":"👨‍💻🎸🍺","cover":null,"text":"&lt;!DOCTYPE html&gt; &lt;html lang&#x3D;&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt; &lt;meta name&#x3D;&quo...","link":"","photos":[],"count_time":{"symbolsCount":"2.9k","symbolsTime":"3 mins."},"categories":[{"name":"前端","slug":"前端","count":17,"path":"api/categories/前端.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":14,"path":"api/tags/JavaScript.json"}],"author":{"name":"ZV","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"致过去的时光","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"R 语言日期与时间","uid":"bb11073ba74dcf1394b9c67790d7c20c","slug":"R语言日期与时间","date":"2020-03-18T00:00:00.000Z","updated":"2021-06-22T10:16:30.101Z","comments":true,"path":"api/articles/R语言日期与时间.json","keywords":"👨‍💻🎸🍺","cover":null,"text":"获取当前的日期和时间在编程中，为了获得当前的日期和时间，有两个常用的函数，这两个函数以 Sys 开头，返回的时间受到操作系统区域设置的影响，因此，返回的时间采用本地格式，符合本地的阅读习惯： &gt; Sys.Date() [1] &quot;2020-03-18&quot; &...","link":"","photos":[],"count_time":{"symbolsCount":"2.9k","symbolsTime":"3 mins."},"categories":[{"name":"拓展","slug":"拓展","count":10,"path":"api/categories/拓展.json"}],"tags":[{"name":"R","slug":"R","count":2,"path":"api/tags/R.json"}],"author":{"name":"ZV","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"致过去的时光","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}