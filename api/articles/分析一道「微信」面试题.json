{"title":"分析一道「微信」面试题","uid":"b713a5ec769cb744eeaf48bdf6c140c9","slug":"分析一道「微信」面试题","date":"2020-06-05T00:00:00.000Z","updated":"2021-06-22T10:16:30.101Z","comments":true,"path":"api/articles/分析一道「微信」面试题.json","keywords":"👨‍💻🎸🍺","cover":null,"content":"<p>题目：实现一个 <code>LazyMan</code>，按照以下方式调用时，得到相关输出：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">LazyMan(&#39;Hank&#39;)\n&#x2F;&#x2F; Hi! This is Hank!\nLazyMan(&#39;Hank&#39;).sleep(10).eat(&#39;dinner&#39;)\n&#x2F;&#x2F; Hi! This is Hank!\n&#x2F;&#x2F; 等待 10 秒..\n&#x2F;&#x2F; Wake up after 10\n&#x2F;&#x2F; Eat dinner~\nLazyMan(&#39;Hank&#39;).eat(&#39;dinner&#39;).eat(&#39;supper&#39;)\n&#x2F;&#x2F; Hi This is Hank!\n&#x2F;&#x2F; Eat dinner~\n&#x2F;&#x2F; Eat supper~\nLazyMan(&#39;Hank&#39;).sleepFirst(5).eat(&#39;supper&#39;)\n&#x2F;&#x2F; 等待 5 秒\n&#x2F;&#x2F; Wake up after 5\n&#x2F;&#x2F; Hi This is Hank!\n&#x2F;&#x2F; Eat supper</code></pre>\n\n<p>代码实现：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">class LazyManCreator &#123;\n  constructor(name) &#123;\n    this.taskList &#x3D; []\n    const task &#x3D; () &#x3D;&gt; &#123;\n      console.log(&#96;Hi! This is $&#123;name&#125;!&#96;)\n      this.next()\n    &#125;\n    this.taskList.push(task)\n    setTimeout(() &#x3D;&gt; &#123;\n      this.next()\n    &#125;, 0)\n  &#125;\n  next() &#123;\n    const task &#x3D; this.taskList.shift()\n    task &amp;&amp; task()\n  &#125;\n  sleep(timeout) &#123;\n    const task &#x3D; () &#x3D;&gt; &#123;\n      setTimeout(() &#x3D;&gt; &#123;\n        console.log(&#96;Wake up after $&#123;timeout&#125;&#96;)\n        this.next()\n      &#125;, timeout * 1000)\n    &#125;\n    this.taskList.push(task)\n    return this\n  &#125;\n  sleepFirst(timeout) &#123;\n    const task &#x3D; () &#x3D;&gt; &#123;\n      setTimeout(() &#x3D;&gt; &#123;\n        console.log(&#96;Wake up after $&#123;timeout&#125;&#96;)\n        this.next()\n      &#125;, timeout * 1000)\n    &#125;\n    this.taskList.unshift(task)\n    return this\n  &#125;\n  eat(meal) &#123;\n    const task &#x3D; () &#x3D;&gt; &#123;\n      console.log(&#96;Eat $&#123;meal&#125;&#96;)\n      this.next()\n    &#125;\n    this.taskList.push(task)\n    return this\n  &#125;\n&#125;\n\nconst LazyMan &#x3D; name &#x3D;&gt; &#123;\n  return new LazyManCreator(name)\n&#125;\n\nconsole.log(&#39;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#39;)\nLazyMan(&#39;Hank&#39;).sleepFirst(5).eat(&#39;supper&#39;)</code></pre>\n\n<p>追加一道类似的题目：实现下面这道题中的machine函数</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">function machine() &#123;\n    \n&#125;\nmachine(&#39;ygy&#39;).execute() \n&#x2F;&#x2F; start ygy\nmachine(&#39;ygy&#39;).do(&#39;eat&#39;).execute(); \n&#x2F;&#x2F; start ygy\n&#x2F;&#x2F; ygy eat\nmachine(&#39;ygy&#39;).wait(5).do(&#39;eat&#39;).execute();\n&#x2F;&#x2F; start ygy\n&#x2F;&#x2F; wait 5s（这里等待了5s）\n&#x2F;&#x2F; ygy eat\nmachine(&#39;ygy&#39;).waitFirst(5).do(&#39;eat&#39;).execute();\n&#x2F;&#x2F; wait 5s\n&#x2F;&#x2F; start ygy\n&#x2F;&#x2F; ygy eat</code></pre>\n\n<p>代码实现：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">function machine(name) &#123;\n  class Machine &#123;\n    constructor(name) &#123;\n      this.name &#x3D; name\n      this.taskList &#x3D; []\n      const task &#x3D; () &#x3D;&gt; &#123;\n        console.log(&#96;start $&#123;this.name&#125;&#96;)\n        this.next()\n      &#125;\n      this.taskList.push(task)\n    &#125;\n    next() &#123;\n      const task &#x3D; this.taskList.shift()\n      task &amp;&amp; task()\n    &#125;\n    execute() &#123;\n      this.next()\n    &#125;\n    do(something) &#123;\n      const task &#x3D; () &#x3D;&gt; &#123;\n        console.log(&#96;$&#123;this.name&#125; $&#123;something&#125;&#96;)\n        this.next()\n      &#125;\n      this.taskList.push(task)\n      return this\n    &#125;\n    wait(timeout) &#123;\n      const task &#x3D; () &#x3D;&gt; &#123;\n        console.log(&#96;wait $&#123;timeout&#125;s&#96;)\n        setTimeout(() &#x3D;&gt; &#123;\n          this.next()\n        &#125;, 1000 * timeout)\n      &#125;\n      this.taskList.push(task)\n      return this\n    &#125;\n    waitFirst(timeout) &#123;\n      const task &#x3D; () &#x3D;&gt; &#123;\n        console.log(&#96;wait $&#123;timeout&#125;s&#96;)\n        setTimeout(() &#x3D;&gt; &#123;\n          this.next()\n        &#125;, 1000 * timeout)\n      &#125;\n      this.taskList.unshift(task)\n      return this\n    &#125;\n  &#125;\n  return new Machine(name)\n&#125;</code></pre>\n\n","text":"题目：实现一个 LazyMan，按照以下方式调用时，得到相关输出： LazyMan(&#39;Hank&#39;) &#x2F;&#x2F; Hi! This is Hank! LazyMan(&#39;Hank&#39;).sleep(10).eat(&#39;dinner&#...","link":"","photos":[],"count_time":{"symbolsCount":"3.9k","symbolsTime":"4 mins."},"categories":[{"name":"前端","slug":"前端","count":17,"path":"api/categories/前端.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":14,"path":"api/tags/JavaScript.json"}],"toc":"","author":{"name":"ZV","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"致过去的时光","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"百度地图与React","uid":"ddc597ec7f043c7134b0654946012fa0","slug":"百度地图与React","date":"2020-07-21T00:00:00.000Z","updated":"2021-06-22T10:16:30.101Z","comments":true,"path":"api/articles/百度地图与React.json","keywords":"👨‍💻🎸🍺","cover":null,"text":"WEB 端文档 JavaScript API 微信小程序 JavaScript API 地铁图 JavaScript API 位置数据可视化 MapV GL 与 React 结合以 JavaScript API GL v1.0 版本的 SDK为例 首先在public\\index....","link":"","photos":[],"count_time":{"symbolsCount":"2.9k","symbolsTime":"3 mins."},"categories":[{"name":"前端","slug":"前端","count":17,"path":"api/categories/前端.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":14,"path":"api/tags/JavaScript.json"},{"name":"React","slug":"React","count":1,"path":"api/tags/React.json"}],"author":{"name":"ZV","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"致过去的时光","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"实现一个集合","uid":"3db723625fe9f0ccdae76ec1059696b7","slug":"实现一个集合","date":"2020-06-04T00:00:00.000Z","updated":"2021-06-22T10:16:30.101Z","comments":true,"path":"api/articles/实现一个集合.json","keywords":"👨‍💻🎸🍺","cover":null,"text":"class CustomSet &#123; constructor() &#123; this.items &#x3D; &#123;&#125; &#125; getKeyForValue(value) &#123; return Symbol.for(value) &#12...","link":"","photos":[],"count_time":{"symbolsCount":"3.4k","symbolsTime":"3 mins."},"categories":[{"name":"基础","slug":"基础","count":9,"path":"api/categories/基础.json"}],"tags":[{"name":"算法","slug":"算法","count":4,"path":"api/tags/算法.json"}],"author":{"name":"ZV","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"致过去的时光","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}