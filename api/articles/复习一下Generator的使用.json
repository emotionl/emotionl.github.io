{"title":"复习一下Generator的使用","uid":"c1e7e740a56d87809715d43780d153ea","slug":"复习一下Generator的使用","date":"2020-08-25T00:00:00.000Z","updated":"2021-06-22T10:16:30.101Z","comments":true,"path":"api/articles/复习一下Generator的使用.json","keywords":"👨‍💻🎸🍺","cover":null,"content":"<p>先来个例题 看一下结果</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">function* addGen(x) &#123;\n  let y &#x3D; (yield x + 5) * 2\n  let z &#x3D; yield y &#x2F; 4\n  return x + y + z\n&#125;\n\nlet g &#x3D; addGen(1)\nconsole.log(g.next()) &#x2F;&#x2F; 1&gt; &#123;value: 6, done: false&#125;\nconsole.log(g.next()) &#x2F;&#x2F; 2&gt; &#123;value: NaN, done: false&#125;\nconsole.log(g.next()) &#x2F;&#x2F; 3&gt; &#123;value: NaN, done: true&#125;\n&#x2F;* \n  1&gt; g.next() 返回的 value 是 x + 5 &#x3D;&gt; 6\n  2&gt; g.next() 返回的 value 是 y &#x2F; 3，由于本次 g.next() 并未传值，所以 y &#x3D; undefined * 2 &#x3D;&gt; NaN，所以本次的 value 是 NaN &#x2F; 3 &#x3D;&gt; NaN\n  3&gt; g.next() 返回的 value 是 x + y + z &#x3D;&gt; 1 + NaN + NaN &#x3D;&gt; NaN\n*&#x2F;</code></pre>\n\n<p>如何让以上代码执行的更符合一般的逻辑<code>y = (1 + 5) * 2 ; z = y / 4</code>，最后返回 16</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">function* addGen(x) &#123;\n  let y &#x3D; (yield x + 5) * 2\n  let z &#x3D; yield y &#x2F; 4\n  return x + y + z\n&#125;\n\nlet g &#x3D; addGen(1)\nlet v1 &#x3D; g.next().value\nlet v2 &#x3D; g.next(v1).value\nlet v3 &#x3D; g.next(v2).value\nconsole.log(v3)</code></pre>\n\n<p>再来个实例，以 “敲七” 这个游戏为例，从零开始获取每一个符合 “敲七” 的数字</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">function* count7Gen(count &#x3D; 1) &#123;\n  while (true) &#123;\n    if (count % 7 &#x3D;&#x3D;&#x3D; 0 || count % 10 &#x3D;&#x3D;&#x3D; 7) &#123;\n      yield count\n    &#125;\n    count++\n  &#125;\n&#125;\n\nconst c7g &#x3D; count7Gen()\n\nconsole.log(c7g.next()) &#x2F;&#x2F; &#123;value: 7, done: false&#125;\nconsole.log(c7g.next()) &#x2F;&#x2F; &#123;value: 14, done: false&#125;\nconsole.log(c7g.next()) &#x2F;&#x2F; &#123;value: 17, done: false&#125;\nconsole.log(c7g.next()) &#x2F;&#x2F; &#123;value: 21, done: false&#125;\nconsole.log(c7g.next()) &#x2F;&#x2F; &#123;value: 27, done: false&#125;</code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><code>count7Gen</code>这个函数本身是一个死循环，但是 <code>Generator</code>这种模式使其能在特定的节点停止或继续</p></blockquote>\n<p>模拟一个简单的 <code>Generator</code></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">const makeGenerator &#x3D; (list) &#x3D;&gt; &#123;\n  let index &#x3D; 0\n  return &#123;\n    next: () &#x3D;&gt; &#123;\n      const value &#x3D; list[index++]\n      const done &#x3D; index &gt;&#x3D; list.length\n      return &#123; value, done &#125;\n    &#125;\n  &#125;\n&#125;\n\nconst g &#x3D; makeGenerator([&#39;a&#39;, &#39;b&#39;, &#39;c&#39;])\nconsole.log(g.next())\nconsole.log(g.next())\nconsole.log(g.next())\nconsole.log(g.next())</code></pre>\n","text":"先来个例题 看一下结果 function* addGen(x) &#123; let y &#x3D; (yield x + 5) * 2 let z &#x3D; yield y &#x2F; 4 return x + y + z &#125; let g &#x3D; add...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"前端","slug":"前端","count":17,"path":"api/categories/前端.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":14,"path":"api/tags/JavaScript.json"}],"toc":"","author":{"name":"ZV","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"致过去的时光","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"试试 Proxy 和 Reflect","uid":"391e5379613c514b7c0c8a55534d752c","slug":"试试 Proxy 和 Reflect","date":"2020-08-26T00:00:00.000Z","updated":"2021-06-22T10:16:30.101Z","comments":true,"path":"api/articles/试试 Proxy 和 Reflect.json","keywords":"👨‍💻🎸🍺","cover":null,"text":"Proxy使用 Object.defineProperty()模拟Vue的数据绑定 class VData &#123; constructor(&#123; data &#125;) &#123; this.data &#x3D; data this.bindData(data...","link":"","photos":[],"count_time":{"symbolsCount":"4.6k","symbolsTime":"4 mins."},"categories":[{"name":"前端","slug":"前端","count":17,"path":"api/categories/前端.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":14,"path":"api/tags/JavaScript.json"}],"author":{"name":"ZV","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"致过去的时光","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Nestjs 开发流","uid":"13fdecdad2e10251171eb5f21046894a","slug":"Nestjs 开发流","date":"2020-08-13T00:00:00.000Z","updated":"2021-06-22T10:16:30.101Z","comments":true,"path":"api/articles/Nestjs 开发流.json","keywords":"👨‍💻🎸🍺","cover":null,"text":" Entity定义数据 import &#123; BaseEntity, Entity, PrimaryGeneratedColumn, Column &#125; from &#39;typeorm&#39; import &#123; TaskStatus &#125; f...","link":"","photos":[],"count_time":{"symbolsCount":"5.7k","symbolsTime":"5 mins."},"categories":[{"name":"拓展","slug":"拓展","count":10,"path":"api/categories/拓展.json"}],"tags":[{"name":"Node.js","slug":"Node-js","count":2,"path":"api/tags/Node-js.json"}],"author":{"name":"ZV","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"致过去的时光","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}