{"title":"R 语言知识点杂记","uid":"7c42f8de2051f2a0424b2125ac8f5fc7","slug":"R语言知识点杂记","date":"2020-03-17T00:00:00.000Z","updated":"2021-06-22T10:16:30.101Z","comments":true,"path":"api/articles/R语言知识点杂记.json","keywords":"👨‍💻🎸🍺","cover":[],"content":"<h2 id=\"数据类型\"><a href=\"#数据类型\" class=\"headerlink\" title=\"数据类型\"></a>数据类型</h2><ul>\n<li><strong>Vectors</strong> (one dimensional array): can hold numeric, character or logical values. The elements in a vector all have the same data type.</li>\n<li><strong>Matrices</strong> (two dimensional array): can hold numeric, character or logical values. The elements in a matrix all have the same data type.</li>\n<li><strong>Data frames</strong> (two-dimensional objects): can hold numeric, character or logical values. Within a column all elements have the same data type, but different columns can be of different data type.</li>\n<li><strong>Lists</strong>: ‘As opposed to vectors, lists can hold components of different types, just as your to-do lists can contain different categories of tasks. This chapter will teach you how to create, name, and subset these lists.’</li>\n</ul>\n<h2 id=\"R-语言的标准差\"><a href=\"#R-语言的标准差\" class=\"headerlink\" title=\"R 语言的标准差\"></a>R 语言的标准差</h2><p>当我们按照课本里的公式去实现一个求标准差的函数时大概是这样的</p>\n<pre class=\"line-numbers language-rgit\" data-language=\"rgit\"><code class=\"language-rgit\">get_sd &lt;- function(vec) &#123;\n  square_sum &lt;- 0\n  vec_length &lt;- length(vec)\n  vec_mean &lt;- mean(vec)\n  for (item in vec) &#123;\n    square_sum &lt;- square_sum + (item - vec_mean) ^ 2\n  &#125;\n  vec_sd &lt;- sqrt(square_sum &#x2F; vec_length)\n  return(vec_sd)\n&#125;</code></pre>\n\n<p>但是当我们使用 <code>R</code> 语言中自带的 <code>sd</code>函数计算标准差的时候答案却不太一样</p>\n<p>测试数据 <code>num_vec &lt;- c(1, 2, 3, 4)</code></p>\n<p>测试结果</p>\n<pre class=\"line-numbers language-rgit\" data-language=\"rgit\"><code class=\"language-rgit\">get_sd(num_vec)\n# [1] 1.118034\nsd(num_vec)\n# [1] 1.290994</code></pre>\n\n<p>那么问题到底出现在哪一个环节呢</p>\n<p>一通 <code>Google</code> 后在 <a href=\"https://stackoverflow.com/questions/6457755/standard-deviation-in-r-seems-to-be-returning-the-wrong-answer-am-i-doing-some\">Standard Deviation in R Seems to be Returning the Wrong Answer - Am I Doing Something Wrong?</a>找到了答案</p>\n<p>意思大致是说 <code>R</code>语言中内建的 <code>sd</code>函数计算的是<strong>样本标准差</strong>而我们书本里教的则是<strong>整体标准差</strong></p>\n<p><strong>样本标准差</strong>的时候分母是<code>n-1</code> 而<strong>整体标准差</strong>的分母则是<code>n</code></p>\n<p>分母的差别造成了两次实验结果的差异</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><a href=\"https://www.zhihu.com/question/20099757/answer/658048814\">为什么样本方差（sample variance）的分母是 n-1？ - 张英锋的回答 - 知乎</a></p>\n<p><a href=\"https://www.shuxuele.com/data/standard-deviation.html\">标准差和方差</a></p></blockquote>\n<h2 id=\"R-语言的返回值\"><a href=\"#R-语言的返回值\" class=\"headerlink\" title=\"R 语言的返回值\"></a>R 语言的返回值</h2><ul>\n<li>R 语言中 return 本身就是一个函数，所以必须使用 <code>return(...)</code> 的方式，括号不能省略；这意味着显式返回变成一种函数调用，可能降低程序运行效率。</li>\n<li>不使用 return 也可以提供返回值，所以 R 语言的普遍习惯用法是<strong>避免显式调用</strong> <code>return()</code>。</li>\n<li>如果显式调用 <code>return()</code> 可以使得函数的结构更加清楚，那就尽管调用吧，没有问题。</li>\n</ul>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>参考资料：<a href=\"https://link.zhihu.com/?target=http://stackoverflow.com/questions/11738823/explicitly-calling-return-in-a-function-or-not\">StackOverflow - Explicitly calling return in a function or not</a></p></blockquote>\n<h2 id=\"NA-与-NULL-的区别\"><a href=\"#NA-与-NULL-的区别\" class=\"headerlink\" title=\"NA 与 NULL 的区别\"></a>NA 与 NULL 的区别</h2><p>在 R 语言中，缺失值用 <strong>NA</strong>表示，空值用<strong>NULL</strong>表示。初学者在学习 R 语言时，一般都会被这两者弄糊涂，常常错误地把这两者视为等价的。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><a href=\"https://www.cnblogs.com/100thMountain/archive/2012/12/12/2815212.html\">R 语言中”NA”与”NULL”的区别</a></p></blockquote>\n<h2 id=\"library-与-require-的区别\"><a href=\"#library-与-require-的区别\" class=\"headerlink\" title=\"library() 与 require() 的区别\"></a>library() 与 require() 的区别</h2><p><code>library()</code>和<code>require()</code>都可以载入包，但二者存在区别。</p>\n<p>在一个函数中，如果一个包不存在，执行到 library 将会停止执行，require 则会继续执行。</p>\n<p>require 将会根据包的存在与否返回<code>TRUE</code>或者<code>FALSE</code></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><a href=\"https://stackoverflow.com/questions/5595512/what-is-the-difference-between-require-and-library\">What is the difference between require() and library()?</a></p></blockquote>\n<h2 id=\"apply-函数族\"><a href=\"#apply-函数族\" class=\"headerlink\" title=\"apply 函数族\"></a>apply 函数族</h2><p><img src=\"/images/post/03.png\" alt=\"03\"></p>\n<ul>\n<li><p>lapply</p>\n<ul>\n<li>apply function over list or vector</li>\n<li>output = list</li>\n</ul>\n</li>\n<li><p>sapply</p>\n<ul>\n<li>apply function over list or vector</li>\n<li><strong>try to</strong> simplify list to array</li>\n</ul>\n</li>\n<li><p>vapply</p>\n<ul>\n<li>apply function over list or vector</li>\n<li><strong>explicitly specify</strong> output format</li>\n</ul>\n</li>\n</ul>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><a href=\"https://nsaunders.wordpress.com/2010/08/20/a-brief-introduction-to-apply-in-r/\">A brief introduction to “apply” in R</a></p>\n<p><a href=\"http://blog.fens.me/r-apply/\">掌握 R 语言中的 apply 函数族</a></p></blockquote>\n<h2 id=\"碰到的函数\"><a href=\"#碰到的函数\" class=\"headerlink\" title=\"碰到的函数\"></a>碰到的函数</h2><table>\n<thead>\n<tr>\n<th>函数</th>\n<th>功能</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>rnorm</code></td>\n<td>生成一系列的随机数</td>\n</tr>\n<tr>\n<td><code>strsplit</code></td>\n<td>分割字符串</td>\n</tr>\n<tr>\n<td><code>sd</code></td>\n<td>计算样本标准差</td>\n</tr>\n<tr>\n<td><code>args</code></td>\n<td>获得函数参数</td>\n</tr>\n<tr>\n<td><code>sample</code></td>\n<td>对数据进行抽样</td>\n</tr>\n<tr>\n<td><code>gsub</code></td>\n<td>用于对的删减、增补、替换和切割</td>\n</tr>\n<tr>\n<td><code>identical</code></td>\n<td>判断两个对象是否相等</td>\n</tr>\n<tr>\n<td><code>cat</code></td>\n<td>连接并输出</td>\n</tr>\n<tr>\n<td><code>runif</code></td>\n<td>生成均匀分布随机数</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n<h2 id=\"数字相关函数\"><a href=\"#数字相关函数\" class=\"headerlink\" title=\"数字相关函数\"></a>数字相关函数</h2><table>\n<thead>\n<tr>\n<th>函数</th>\n<th>功能</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>abs</code></td>\n<td>取绝对值</td>\n</tr>\n<tr>\n<td><code>sum</code></td>\n<td>求和</td>\n</tr>\n<tr>\n<td><code>mean</code></td>\n<td>求平均住</td>\n</tr>\n<tr>\n<td><code>round</code></td>\n<td>四舍五入</td>\n</tr>\n<tr>\n<td><code>floor</code></td>\n<td>向下取整</td>\n</tr>\n<tr>\n<td><code>ceiling</code></td>\n<td>向上取整</td>\n</tr>\n<tr>\n<td><code>trunc</code></td>\n<td>向零的方向截取</td>\n</tr>\n<tr>\n<td><code>signif</code></td>\n<td>保留有效数字</td>\n</tr>\n</tbody></table>\n<h2 id=\"数据相关函数\"><a href=\"#数据相关函数\" class=\"headerlink\" title=\"数据相关函数\"></a>数据相关函数</h2><table>\n<thead>\n<tr>\n<th>函数</th>\n<th>功能</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>seq</code></td>\n<td>Generate sequences, by specifying the <code>from</code>, <code>to</code>, and <code>by</code> arguments.</td>\n</tr>\n<tr>\n<td><code>rep</code></td>\n<td>Replicate elements of vectors and lists.</td>\n</tr>\n<tr>\n<td><code>sort</code></td>\n<td>Sort a vector in ascending order. Works on numerics, but also on character strings and logicals.</td>\n</tr>\n<tr>\n<td><code>rev</code></td>\n<td>Reverse the elements in a data structures for which reversal is defined.</td>\n</tr>\n<tr>\n<td><code>str</code></td>\n<td>Display the structure of any R object.</td>\n</tr>\n<tr>\n<td><code>append</code></td>\n<td>Merge vectors or lists.</td>\n</tr>\n<tr>\n<td><code>is.*()</code></td>\n<td>Check for the class of an R object.</td>\n</tr>\n<tr>\n<td><code>as.*()</code></td>\n<td>Convert an R object from one class to another.</td>\n</tr>\n<tr>\n<td><code>unlist</code></td>\n<td>Flatten (possibly embedded) lists to produce a vector.</td>\n</tr>\n</tbody></table>\n<h2 id=\"正则表达式相关函数\"><a href=\"#正则表达式相关函数\" class=\"headerlink\" title=\"正则表达式相关函数\"></a>正则表达式相关函数</h2><table>\n<thead>\n<tr>\n<th>函数</th>\n<th>功能</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>grepl</code></td>\n<td>which returns <code>TRUE</code> when a pattern is found in the corresponding character string</td>\n</tr>\n<tr>\n<td><code>grep</code></td>\n<td>which returns a vector of indices of the character strings that contains the pattern</td>\n</tr>\n<tr>\n<td><code>sub</code></td>\n<td>replace first match</td>\n</tr>\n<tr>\n<td><code>gsub</code></td>\n<td>replace all matches</td>\n</tr>\n</tbody></table>\n<h2 id=\"如何安装-XLConnect\"><a href=\"#如何安装-XLConnect\" class=\"headerlink\" title=\"如何安装 XLConnect\"></a>如何安装 XLConnect</h2><ol>\n<li><p>安装 <a href=\"https://mirrors.huaweicloud.com/java/jdk/\">JDK</a></p>\n</li>\n<li><p>配置 <code>JAVA_HOME</code></p>\n<pre class=\"line-numbers language-r\" data-language=\"r\"><code class=\"language-r\">Sys.setenv(JAVA_HOME&#x3D;&#39;D:\\\\Program Files\\\\Java\\\\jre1.8.0_202&#39;)</code></pre>\n</li>\n<li><p>安装 <code>XLConnect</code></p>\n<pre class=\"line-numbers language-r\" data-language=\"r\"><code class=\"language-r\">install.packages(&quot;XLConnect&quot;)</code></pre>\n\n\n\n</li>\n</ol>\n","text":"数据类型 Vectors (one dimensional array): can hold numeric, character or logical values. The elements in a vector all have the same data type. M...","link":"","photos":[],"count_time":{"symbolsCount":"3.6k","symbolsTime":"3 mins."},"categories":[{"name":"拓展","slug":"拓展","count":10,"path":"api/categories/拓展.json"}],"tags":[{"name":"R","slug":"R","count":2,"path":"api/tags/R.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">数据类型</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#R-%E8%AF%AD%E8%A8%80%E7%9A%84%E6%A0%87%E5%87%86%E5%B7%AE\"><span class=\"toc-text\">R 语言的标准差</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#R-%E8%AF%AD%E8%A8%80%E7%9A%84%E8%BF%94%E5%9B%9E%E5%80%BC\"><span class=\"toc-text\">R 语言的返回值</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#NA-%E4%B8%8E-NULL-%E7%9A%84%E5%8C%BA%E5%88%AB\"><span class=\"toc-text\">NA 与 NULL 的区别</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#library-%E4%B8%8E-require-%E7%9A%84%E5%8C%BA%E5%88%AB\"><span class=\"toc-text\">library() 与 require() 的区别</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#apply-%E5%87%BD%E6%95%B0%E6%97%8F\"><span class=\"toc-text\">apply 函数族</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%A2%B0%E5%88%B0%E7%9A%84%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">碰到的函数</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%95%B0%E5%AD%97%E7%9B%B8%E5%85%B3%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">数字相关函数</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%95%B0%E6%8D%AE%E7%9B%B8%E5%85%B3%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">数据相关函数</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%9B%B8%E5%85%B3%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">正则表达式相关函数</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%85-XLConnect\"><span class=\"toc-text\">如何安装 XLConnect</span></a></li></ol>","author":{"name":"ZV","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"致过去的时光","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"R 语言日期与时间","uid":"bb11073ba74dcf1394b9c67790d7c20c","slug":"R语言日期与时间","date":"2020-03-18T00:00:00.000Z","updated":"2021-06-22T10:16:30.101Z","comments":true,"path":"api/articles/R语言日期与时间.json","keywords":"👨‍💻🎸🍺","cover":null,"text":"获取当前的日期和时间在编程中，为了获得当前的日期和时间，有两个常用的函数，这两个函数以 Sys 开头，返回的时间受到操作系统区域设置的影响，因此，返回的时间采用本地格式，符合本地的阅读习惯： &gt; Sys.Date() [1] &quot;2020-03-18&quot; &...","link":"","photos":[],"count_time":{"symbolsCount":"2.9k","symbolsTime":"3 mins."},"categories":[{"name":"拓展","slug":"拓展","count":10,"path":"api/categories/拓展.json"}],"tags":[{"name":"R","slug":"R","count":2,"path":"api/tags/R.json"}],"author":{"name":"ZV","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"致过去的时光","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"移动Web开发","uid":"f7ee095c73b7adf12560106c216e64a2","slug":"移动Web开发","date":"2019-12-25T00:00:00.000Z","updated":"2021-06-22T10:16:30.101Z","comments":true,"path":"api/articles/移动Web开发.json","keywords":"👨‍💻🎸🍺","cover":null,"text":" 运行在手机端的 Web页面（H5页面） 跨平台 基于Webview 告别IE拥抱Webkit 更好的适配和性能要求 常见移动web适配方法PC 960px / 1000px 居中 盒子模型，定高，定宽 display:inline-block 移动web 定高，宽度百分比 Fl...","link":"","photos":[],"count_time":{"symbolsCount":"2.7k","symbolsTime":"2 mins."},"categories":[{"name":"前端","slug":"前端","count":17,"path":"api/categories/前端.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":14,"path":"api/tags/JavaScript.json"},{"name":"移动端","slug":"移动端","count":1,"path":"api/tags/移动端.json"},{"name":"CSS","slug":"CSS","count":1,"path":"api/tags/CSS.json"}],"author":{"name":"ZV","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"致过去的时光","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}