{"title":"二进制","uid":"55fb07a4dbf6f44614d26c9d54b2e72f","slug":"二进制","date":"2019-08-26T00:00:00.000Z","updated":"2021-06-22T10:16:30.101Z","comments":true,"path":"api/articles/二进制.json","keywords":"👨‍💻🎸🍺","cover":null,"content":"<h2 id=\"什么是二进制计数法？\"><a href=\"#什么是二进制计数法？\" class=\"headerlink\" title=\"什么是二进制计数法？\"></a>什么是二进制计数法？</h2><p>53 的十进制表达</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">53 &#x3D; 5*10^1 + 3*10^0</code></pre>\n\n<p>53 的二进制表达</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">53 &#x3D; 1*2^5 + 1*2^4 + 0*2^3 + 1*2^2 + 0*2^1 + 1*2^0   </code></pre>\n\n<p><code>JavaScript</code> 中 <code>Number.prototype.toString</code> 的模拟实现</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">Number.prototype.toStringFake &#x3D; function(base) &#123;\n    let decNumber &#x3D; this\n    let remArr &#x3D; []\n    let rem &#x3D; 0\n    while (decNumber &gt; 0) &#123;\n        rem &#x3D; Math.floor(decNumber % base)\n        if (rem &gt; 10) rem &#x3D; String.fromCharCode(rem + 87) &#x2F;&#x2F; 余数超过9以[a-f]显示\n        remArr.unshift(rem)\n        decNumber &#x3D; Math.floor(decNumber &#x2F; base)\n    &#125;\n    return remArr.join(&#39;&#39;)\n&#125;</code></pre>\n\n<p><code>JavaScript</code> 中 <code>parseInt</code> 的模拟实现</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">const parseIntFake &#x3D; (numText, dec &#x3D; 10) &#x3D;&gt; &#123;\n    return numText\n        .split(&#39;&#39;)\n        .reverse()\n        .reduce((prev, next, index) &#x3D;&gt; &#123;\n            next &#x3D; isNaN(+next) ? next.charCodeAt() - 87 : +next\n            return prev + Math.pow(dec, index) * next\n        &#125;, 0)\n&#125;</code></pre>\n","text":"什么是二进制计数法？53 的十进制表达 53 &#x3D; 5*10^1 + 3*10^0 53 的二进制表达 53 &#x3D; 1*2^5 + 1*2^4 + 0*2^3 + 1*2^2 + 0*2^1 + 1*2^0 JavaScript 中 Number.prototyp...","link":"","photos":[],"count_time":{"symbolsCount":981,"symbolsTime":"1 mins."},"categories":[{"name":"基础","slug":"基础","count":9,"path":"api/categories/基础.json"}],"tags":[{"name":"数学","slug":"数学","count":5,"path":"api/tags/数学.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%80%E4%B9%88%E6%98%AF%E4%BA%8C%E8%BF%9B%E5%88%B6%E8%AE%A1%E6%95%B0%E6%B3%95%EF%BC%9F\"><span class=\"toc-text\">什么是二进制计数法？</span></a></li></ol>","author":{"name":"ZV","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"致过去的时光","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"MongoDB 高级查询","uid":"e5fb6a3fd97ef95b02d7d5beaa06b7e3","slug":"MongoDB高级查询","date":"2019-08-26T00:00:00.000Z","updated":"2021-06-22T10:16:30.101Z","comments":true,"path":"api/articles/MongoDB高级查询.json","keywords":"👨‍💻🎸🍺","cover":null,"text":"MongoDB 聚合管道使用聚合管道可以对集合中的文档进行变换和组合实际运用：表关联查询、数据的统计MongoDB 中使用 db.COLLECTION_NAME.aggregate([&#123;&#125;,...]) 方法来构建和使用聚合管道 Aggregation Pipe...","link":"","photos":[],"count_time":{"symbolsCount":"4.1k","symbolsTime":"4 mins."},"categories":[{"name":"数据库","slug":"数据库","count":2,"path":"api/categories/数据库.json"}],"tags":[{"name":"MongoDB","slug":"MongoDB","count":2,"path":"api/tags/MongoDB.json"}],"author":{"name":"ZV","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"致过去的时光","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"余数","uid":"c83a6d6824f2f22e4599f12b06607ba3","slug":"余数","date":"2019-08-26T00:00:00.000Z","updated":"2021-06-22T10:16:30.101Z","comments":true,"path":"api/articles/余数.json","keywords":"👨‍💻🎸🍺","cover":[],"text":"前置知识余数总是在一个固定的范围内。 整数是没有边界的，它可能是正无穷，也可能是负无穷。但是余数却可以通过某一种关系，让整数处于一个确定的边界内。 同余定理：简单来说，就是两个整数 a 和 b，如果它们除以正整数 m 得到的余数相等，我们就可以说 a 和 b 对于模 m 同余。 ...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"基础","slug":"基础","count":9,"path":"api/categories/基础.json"}],"tags":[{"name":"数学","slug":"数学","count":5,"path":"api/tags/数学.json"}],"author":{"name":"ZV","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"致过去的时光","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}