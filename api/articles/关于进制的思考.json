{"title":"关于进制的思考","uid":"15d1e9457069635d443cc237473de367","slug":"关于进制的思考","date":"2019-08-26T00:00:00.000Z","updated":"2021-06-22T10:16:30.101Z","comments":true,"path":"api/articles/关于进制的思考.json","keywords":"👨‍💻🎸🍺","cover":null,"content":"<h2 id=\"三个基本类型\"><a href=\"#三个基本类型\" class=\"headerlink\" title=\"三个基本类型\"></a>三个基本类型</h2><ul>\n<li><code>int</code></li>\n<li><code>float</code></li>\n<li><code>char</code></li>\n</ul>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><ul>\n<li><p>bit 二进制位</p>\n<p>计算机用来存储数据最基本的单位是电子管 有两种状态开启和关闭 即 0 和 1 这两种可能</p>\n<p>对应到计算机中的存储单位就是 <code>bit</code></p>\n<p><code>n</code>个<code>bit</code>可以表示 <code>0 ~ 2^n - 1</code> 这个区间的数</p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th align=\"center\">二进制</th>\n<th align=\"center\">十进制</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">0</td>\n<td align=\"center\">0</td>\n</tr>\n<tr>\n<td align=\"center\">1</td>\n<td align=\"center\">1</td>\n</tr>\n<tr>\n<td align=\"center\">10</td>\n<td align=\"center\">2</td>\n</tr>\n<tr>\n<td align=\"center\">11</td>\n<td align=\"center\">3</td>\n</tr>\n<tr>\n<td align=\"center\">100</td>\n<td align=\"center\">4</td>\n</tr>\n<tr>\n<td align=\"center\">101</td>\n<td align=\"center\">5</td>\n</tr>\n<tr>\n<td align=\"center\">110</td>\n<td align=\"center\">6</td>\n</tr>\n<tr>\n<td align=\"center\">111</td>\n<td align=\"center\">7</td>\n</tr>\n</tbody></table>\n<ul>\n<li><p>Byte</p>\n<p>在计算机中 8 个二进制位为一个字节 (B)，最常用的单位。</p>\n<p>所以可以得出 1 个 <code>Byte</code> 可以表示一个<code>0 ~ 2^8 - 1</code>大小的数</p>\n</li>\n<li><p>进制</p>\n<p>进制只是数字的一种表现形式</p>\n<p>也就是说<code>10 进制 32</code>和<code>2 进制的 100000</code>其实是一样的 只是展现方式的有所不同 </p>\n</li>\n<li><p>int 与 char 的关系</p>\n<p>在 C 语言中 int 与 char 是可以无缝转换的</p>\n</li>\n<li><p>string 类型的的本质是个数组</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">&#x2F;&#x2F; 此时 a 是一个整形数字 即 int 类型\nlet a &#x3D; 100\t\t\t\t\t\t\n&#x2F;&#x2F; 由于 int 和 char 是相同的那么我们可以找到 ASCII 码为 100 的 char 即 &quot;d&quot;\nlet b &#x3D; String.fromCharCode(a)\t\n&#x2F;&#x2F; 然而把 a 从 int 转换成 string 得到 &quot;100&quot; 后其实得到的是一个装满 char 的一个数组\n&#x2F;&#x2F; 每一个 char 都可以找到它的 int 类型\nlet c &#x3D; a.toString()\t\t\t&#x2F;&#x2F; &quot;100&quot;\nc.charCodeAt(0)\t\t\t\t\t&#x2F;&#x2F; 54\nc.charCodeAt(1)\t\t\t\t\t&#x2F;&#x2F; 52</code></pre>\n</li>\n<li><p>同一个数由于进制不同而导致的显示方式不同并不影响他们相等</p>\n<p>但是一个 int 类型的 100 和一个 string 类型的 “100”是完全不同的</p>\n<p>存储一个 int 的 100 用 1 Byte 又就可以了</p>\n<p>存储一个 string 类型的 “100” 需要用 3 Byte （1 个 char 需要 1 Byte 大小的空间去存储）</p>\n</li>\n</ul>\n<h2 id=\"补充知识\"><a href=\"#补充知识\" class=\"headerlink\" title=\"补充知识\"></a>补充知识</h2><h3 id=\"计算机存储单位的换算关系\"><a href=\"#计算机存储单位的换算关系\" class=\"headerlink\" title=\"计算机存储单位的换算关系\"></a>计算机存储单位的换算关系</h3><p>计算机存储单位一般用<code>bit、B、KB、MB、GB、TB、PB、EB、ZB、YB、BB、NB、DB……</code>来表示，它们之间的关系是：</p>\n<p>位 bit (比特)(Binary Digits)：存放一位二进制数，即 0 或 1，最小的存储单位。[英文缩写：b(固定小写)]</p>\n<p>字节byte：8个二进制位为一个字节(B)，最常用的单位。</p>\n<ul>\n<li><code>1 Byte (B) = 8 bit</code></li>\n<li><code>1 Kilo Byte (KB) = 1024 B</code></li>\n<li><code>1 Mega Byte (MB) = 1024 KB</code></li>\n<li><code>1 Giga Byte (GB) = 1024 MB</code></li>\n<li><code>1 Tera Byte (TB) = 1024 GB</code></li>\n<li><code>1 Peta Byte (PB) = 1024 TB</code></li>\n<li><code>1 Exa Byte (EB) = 1024 PB</code></li>\n<li><code>1 Zetta Byte (ZB) = 1024 EB</code></li>\n<li><code>1 Yotta Byte (YB) = 1024 ZB</code></li>\n<li><code>1 Bronto Byte (BB) = 1024 YB</code></li>\n<li><code>1 Nona Byte (NB) = 1024 BB</code></li>\n<li><code>1 Dogga Byte (DB) = 1024 NB</code></li>\n<li><code>1 Corydon Byte (CB) = 1024 DB</code></li>\n</ul>\n<h3 id=\"JS-中整形转换成字节数组\"><a href=\"#JS-中整形转换成字节数组\" class=\"headerlink\" title=\"JS 中整形转换成字节数组\"></a>JS 中整形转换成字节数组</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">const intToBytes &#x3D; (value, len) &#x3D;&gt; &#123;\n    let int8Arr &#x3D; new Array(len)\n        for (let i &#x3D; 0; i &lt; len; i++) &#123;\n            int8Arr[i] &#x3D; (Math.floor(value &#x2F; Math.pow(256, i))) &amp; 0xff\n        &#125;\n    return int8Arr\n&#125;</code></pre>\n<h3 id=\"JS中10进制转任意进制\"><a href=\"#JS中10进制转任意进制\" class=\"headerlink\" title=\"JS中10进制转任意进制\"></a>JS中10进制转任意进制</h3>  <pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">const divideByDec &#x3D; (decNumber, base) &#x3D;&gt; &#123;\n    let remArr &#x3D; []\n    let rem &#x3D; 0\n    while (decNumber &gt; 0) &#123;\n        rem &#x3D; Math.floor(decNumber % base)\n        if (rem &gt; 10) rem &#x3D; String.fromCharCode(rem + 87)\n        remArr.push(rem)\n        decNumber &#x3D; Math.floor(decNumber &#x2F; base)\n    &#125;\n    return remArr.reverse().join(&#39;&#39;)\n&#125;\n&#x2F;&#x2F; Math.floor() 方法返回小于等于x的最大整数。\n&#x2F;&#x2F; String.fromCharCode() 返回ASCII码对应的字符\nNumber.prototype.divideByDec &#x3D; function(base) &#123;\n    let decNumber &#x3D; this\n    let remArr &#x3D; []\n    let rem &#x3D; 0\n    while (decNumber &gt; 0) &#123;\n        rem &#x3D; Math.floor(decNumber % base)\n        if (rem &gt; 10) rem &#x3D; String.fromCharCode(rem + 87)\n        remArr.unshift(rem)\n        decNumber &#x3D; Math.floor(decNumber &#x2F; base)\n    &#125;\n    return remArr.join(&#39;&#39;)\n&#125;</code></pre>","text":"三个基本类型 int float char 总结 bit 二进制位 计算机用来存储数据最基本的单位是电子管 有两种状态开启和关闭 即 0 和 1 这两种可能 对应到计算机中的存储单位就是 bit n个bit可以表示 0 ~ 2^n - 1 这个区间的数 二进制 十进制 0 0 1...","link":"","photos":[],"count_time":{"symbolsCount":"2.7k","symbolsTime":"2 mins."},"categories":[{"name":"基础","slug":"基础","count":9,"path":"api/categories/基础.json"}],"tags":[{"name":"数学","slug":"数学","count":5,"path":"api/tags/数学.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%89%E4%B8%AA%E5%9F%BA%E6%9C%AC%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">三个基本类型</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">总结</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%A1%A5%E5%85%85%E7%9F%A5%E8%AF%86\"><span class=\"toc-text\">补充知识</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%AD%98%E5%82%A8%E5%8D%95%E4%BD%8D%E7%9A%84%E6%8D%A2%E7%AE%97%E5%85%B3%E7%B3%BB\"><span class=\"toc-text\">计算机存储单位的换算关系</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#JS-%E4%B8%AD%E6%95%B4%E5%BD%A2%E8%BD%AC%E6%8D%A2%E6%88%90%E5%AD%97%E8%8A%82%E6%95%B0%E7%BB%84\"><span class=\"toc-text\">JS 中整形转换成字节数组</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#JS%E4%B8%AD10%E8%BF%9B%E5%88%B6%E8%BD%AC%E4%BB%BB%E6%84%8F%E8%BF%9B%E5%88%B6\"><span class=\"toc-text\">JS中10进制转任意进制</span></a></li></ol></li></ol>","author":{"name":"ZV","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"致过去的时光","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"余数","uid":"c83a6d6824f2f22e4599f12b06607ba3","slug":"余数","date":"2019-08-26T00:00:00.000Z","updated":"2021-06-22T10:16:30.101Z","comments":true,"path":"api/articles/余数.json","keywords":"👨‍💻🎸🍺","cover":[],"text":"前置知识余数总是在一个固定的范围内。 整数是没有边界的，它可能是正无穷，也可能是负无穷。但是余数却可以通过某一种关系，让整数处于一个确定的边界内。 同余定理：简单来说，就是两个整数 a 和 b，如果它们除以正整数 m 得到的余数相等，我们就可以说 a 和 b 对于模 m 同余。 ...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"基础","slug":"基础","count":9,"path":"api/categories/基础.json"}],"tags":[{"name":"数学","slug":"数学","count":5,"path":"api/tags/数学.json"}],"author":{"name":"ZV","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"致过去的时光","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"小试 MongoDB","uid":"ef644e9a92c4e469f40c448b51b2e904","slug":"小试MongoDB","date":"2019-08-26T00:00:00.000Z","updated":"2021-06-22T10:16:30.101Z","comments":true,"path":"api/articles/小试MongoDB.json","keywords":"👨‍💻🎸🍺","cover":null,"text":"常用命令 命令 作用 cls 清屏 show dbs 查看所有数据库 show collections 显示当前数据库中的所有集合 NoSQL( Not Only SQL) vs SQLMySQL 中的许多概念在 MongoDB 中具有相近的类比。本表概述了每个系统中的一些常见概...","link":"","photos":[],"count_time":{"symbolsCount":"3.7k","symbolsTime":"3 mins."},"categories":[{"name":"数据库","slug":"数据库","count":2,"path":"api/categories/数据库.json"}],"tags":[{"name":"MongoDB","slug":"MongoDB","count":2,"path":"api/tags/MongoDB.json"}],"author":{"name":"ZV","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"致过去的时光","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}