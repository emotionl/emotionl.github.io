{"title":"R 语言日期与时间","uid":"bb11073ba74dcf1394b9c67790d7c20c","slug":"R语言日期与时间","date":"2020-03-18T00:00:00.000Z","updated":"2021-06-22T10:16:30.101Z","comments":true,"path":"api/articles/R语言日期与时间.json","keywords":"👨‍💻🎸🍺","cover":null,"content":"<h2 id=\"获取当前的日期和时间\"><a href=\"#获取当前的日期和时间\" class=\"headerlink\" title=\"获取当前的日期和时间\"></a>获取当前的日期和时间</h2><p>在编程中，为了获得当前的日期和时间，有两个常用的函数，这两个函数以 Sys 开头，返回的时间受到操作系统区域设置的影响，因此，返回的时间采用本地格式，符合本地的阅读习惯：</p>\n<pre class=\"line-numbers language-r\" data-language=\"r\"><code class=\"language-r\">&gt; Sys.Date()\n[1] &quot;2020-03-18&quot;\n&gt; class(Sys.Date())\n[1] &quot;Date&quot;\n\n&gt; Sys.time()\n[1] &quot;2020-03-18 09:07:53 CST&quot;\n&gt; class(Sys.time())\n[1] &quot;POSIXct&quot; &quot;POSIXt&quot;</code></pre>\n\n<p>R 还有一个函数 date()，用于返回当前时间对应的文本</p>\n<pre class=\"line-numbers language-r\" data-language=\"r\"><code class=\"language-r\">&gt; date()\n[1] &quot;Wed Mar 18 09:12:28 2020&quot;</code></pre>\n\n<h2 id=\"文本-gt-gt-日期和时间\"><a href=\"#文本-gt-gt-日期和时间\" class=\"headerlink\" title=\"文本 &gt;&gt; 日期和时间\"></a>文本 &gt;&gt; 日期和时间</h2><ol>\n<li><p><code>as.Date()</code> 把文本转换为日期</p>\n<pre class=\"line-numbers language-r\" data-language=\"r\"><code class=\"language-r\">as.Date(x, format)</code></pre>\n\n<p><code>format</code> 参数用于指定输入的格式，常用的日期格式符号是：</p>\n<ul>\n<li><code>%y</code>：两位数字表示的年份（00-99），不带世纪，例如，数值是 18，格式%y，表示 2018 年 </li>\n<li><code>%Y</code>：四位数字表示的年份（0000-9999）                                              </li>\n<li><code>%m</code>：两位数字的月份，取值范围是 01-12，或 1-12                                    </li>\n<li><code>%d</code>：月份中的天，取值范围是 01-31                                                 </li>\n<li><code>%e</code>：月份中的天，取值范围是 1-31                                                  </li>\n<li><code>%b</code>：月份的缩写（Jan、Feb、Mar 等）                                               </li>\n<li><code>%B</code>：月份的全名（January、February 、March 等）                                   </li>\n<li><code>%a</code>：星期的缩写（Mon、Tue、Wed、Thur、Fri、Sat、Sun）                             </li>\n<li><code>%A</code>：星期的全名（Monday、Tuesday、Wednesday 等）  </li>\n</ul>\n<pre class=\"line-numbers language-r\" data-language=\"r\"><code class=\"language-r\">date_vec &lt;- c(&quot;2020-01-01&quot;, &quot;2020-12-31&quot;)\ndate_vec_format &lt;- as.Date(date_vec, format &#x3D; &quot;%Y-%m-%d&quot;)</code></pre>\n</li>\n<li><p><code>strptime()</code> 解析日期</p>\n<p>函数<code>strptime()</code>，是<code>string parse time</code>的简称，返回<code>POSIXlt</code>日期。在解析日期时，必须指定文本和日期对应的位置，日期的格式使用<code>%+字母</code>来指定。</p>\n<pre class=\"line-numbers language-r\" data-language=\"r\"><code class=\"language-r\">format(x, format &#x3D; &quot;&quot;, tz &#x3D; &quot;&quot;)</code></pre>\n\n<p>参数<code>tz</code>是时区<code>（time zone）</code>，默认值是空，在解析时，如果不指定时区，R 会调用 <code>Sys.timezone</code></p>\n<p>日期格式和 format()函数相同，常用的时间格式符号是：</p>\n<ul>\n<li><code>%H</code>： 小时（24 小时制） </li>\n<li><code>%I</code>： 小时（12 小时制） </li>\n<li><code>%p</code>： 对于 12 小时制，指定上午（AM）或下午（PM） </li>\n<li><code>%M</code>： 分钟 </li>\n<li><code>%S</code>： 秒 </li>\n</ul>\n<pre class=\"line-numbers language-r\" data-language=\"r\"><code class=\"language-r\">cur_date &lt;- date()\ncur_date_parse &lt;- strptime(current_date, format &#x3D; &quot;%a %b %d %H:%M:%S %Y&quot;)</code></pre>\n\n</li>\n</ol>\n<h2 id=\"日期和时间-gt-gt-文本\"><a href=\"#日期和时间-gt-gt-文本\" class=\"headerlink\" title=\"日期和时间 &gt;&gt; 文本\"></a>日期和时间 &gt;&gt; 文本</h2><ol>\n<li><p><code>format()</code> 把日期转换为文本</p>\n<p>对日期进行格式化，转换为可读的文本，<code>format()</code>函数的定义是：</p>\n<pre class=\"line-numbers language-r\" data-language=\"r\"><code class=\"language-r\">format(x, format &#x3D; &quot;&quot;, tz &#x3D; &quot;&quot;)</code></pre>\n\n<p>x 是日期参数，<code>format</code>是输出的格式，<code>tz</code>是时区，该函数按照指定的格式输出文本：</p>\n<pre class=\"line-numbers language-r\" data-language=\"r\"><code class=\"language-r\">today &lt;- Sys.Date()\nmydate &lt;- format(today,format&#x3D;&#39;%Y-%m-%d&#39;)</code></pre>\n</li>\n<li><p><code>strftime()</code>格式化日期</p>\n<p>函数<code>strftime()</code>，是<code>string formated time</code>的简称，用于把时间转换为字符串</p>\n<pre class=\"line-numbers language-r\" data-language=\"r\"><code class=\"language-r\">strptime(x, format, tz &#x3D; &quot;&quot;)</code></pre>\n\n<p>该函数和<code>format()</code>函数的功能和使用方式几乎完全相同。</p>\n<pre class=\"line-numbers language-r\" data-language=\"r\"><code class=\"language-r\">today &lt;- Sys.Date()\nmydate &lt;- strftime(today,format&#x3D;&#39;%Y-%m-%d&#39;)</code></pre>\n\n</li>\n</ol>\n<h2 id=\"日期的比较\"><a href=\"#日期的比较\" class=\"headerlink\" title=\"日期的比较\"></a>日期的比较</h2><p>由于<code>POSIXct</code>类是以秒为单位来计算时间，<code>Date</code>类是以天为单位类计算日期，这意味着可以在日期值上执行比较运算和算术运算：</p>\n<ul>\n<li>将数字和<code>Date</code>类相加，增加或减少相应的天数</li>\n<li>将数字和<code>POSIXct</code>类相加，增加或减少相应的秒数</li>\n</ul>\n<ol>\n<li><p>时间和数字相加</p>\n<p>时间以秒为单位</p>\n<pre class=\"line-numbers language-r\" data-language=\"r\"><code class=\"language-r\">&gt; time1 &lt;- Sys.time()\n&gt; print(time1)\n[1] &quot;2018-05-08 13:16:36 CST&quot;\n&gt; print(time1+60*60)\n[1] &quot;2018-05-08 14:16:36 CST&quot;</code></pre>\n\n<p>日期以天为单位</p>\n<pre class=\"line-numbers language-r\" data-language=\"r\"><code class=\"language-r\">&gt; date1 &lt;- Sys.Date()\n&gt; print(date1)\n[1] &quot;2018-05-08&quot;\n&gt; print(date1+1)\n[1] &quot;2018-05-09&quot;</code></pre>\n</li>\n<li><p>时间比较</p>\n<p>由于<code>Date</code>类和<code>POSIXct</code>类实际上都是一个整数，可以直接比较大小</p>\n<pre class=\"line-numbers language-r\" data-language=\"r\"><code class=\"language-r\">date1 &lt;- as.Date(&#39;2018-01-01&#39;)\ndate2 &lt;- as.Date(&#39;2018-02-01&#39;)\nif (date2 &gt; date1)\n  print (&#39;gt&#39;)</code></pre>\n\n</li>\n</ol>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><h3 id=\"格式转换\"><a href=\"#格式转换\" class=\"headerlink\" title=\"格式转换\"></a>格式转换</h3><table>\n<thead>\n<tr>\n<th>文本 &gt;&gt; 日期和时间</th>\n<th>日期和时间 &gt;&gt; 文本</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>as.Date()</code> 返回<code>Date</code>类型</td>\n<td><code>format()</code></td>\n</tr>\n<tr>\n<td><code>strptime()</code> 返回 <code>POSIXct</code>类型</td>\n<td><code>strftime()</code></td>\n</tr>\n</tbody></table>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><a href=\"https://www.cnblogs.com/ljhdo/p/4804113.html\">R 学习 第八篇：日期和时间</a></p></blockquote>\n","text":"获取当前的日期和时间在编程中，为了获得当前的日期和时间，有两个常用的函数，这两个函数以 Sys 开头，返回的时间受到操作系统区域设置的影响，因此，返回的时间采用本地格式，符合本地的阅读习惯： &gt; Sys.Date() [1] &quot;2020-03-18&quot; &...","link":"","photos":[],"count_time":{"symbolsCount":"2.9k","symbolsTime":"3 mins."},"categories":[{"name":"拓展","slug":"拓展","count":10,"path":"api/categories/拓展.json"}],"tags":[{"name":"R","slug":"R","count":2,"path":"api/tags/R.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%8E%B7%E5%8F%96%E5%BD%93%E5%89%8D%E7%9A%84%E6%97%A5%E6%9C%9F%E5%92%8C%E6%97%B6%E9%97%B4\"><span class=\"toc-text\">获取当前的日期和时间</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%96%87%E6%9C%AC-gt-gt-%E6%97%A5%E6%9C%9F%E5%92%8C%E6%97%B6%E9%97%B4\"><span class=\"toc-text\">文本 &gt;&gt; 日期和时间</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%97%A5%E6%9C%9F%E5%92%8C%E6%97%B6%E9%97%B4-gt-gt-%E6%96%87%E6%9C%AC\"><span class=\"toc-text\">日期和时间 &gt;&gt; 文本</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%97%A5%E6%9C%9F%E7%9A%84%E6%AF%94%E8%BE%83\"><span class=\"toc-text\">日期的比较</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">总结</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%A0%BC%E5%BC%8F%E8%BD%AC%E6%8D%A2\"><span class=\"toc-text\">格式转换</span></a></li></ol></li></ol>","author":{"name":"ZV","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"致过去的时光","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"数学归纳法","uid":"be2d23ba3555cc49cd98054b66cb7fb6","slug":"数学归纳法","date":"2020-03-31T00:00:00.000Z","updated":"2021-06-22T10:16:30.101Z","comments":true,"path":"api/articles/数学归纳法.json","keywords":"👨‍💻🎸🍺","cover":null,"text":"对于类似这种无穷数列的问题，我们通常可以采用数学归纳法（Mathematical Induction）来证明。 在数论中，数学归纳法用来证明任意一个给定的情形都是正确的，也就是说，第一个、第二个、第三个，一直到所有情形，概不例外。 数学归纳法的一般步骤是这样的： 证明基本情况（通...","link":"","photos":[],"count_time":{"symbolsCount":694,"symbolsTime":"1 mins."},"categories":[{"name":"基础","slug":"基础","count":9,"path":"api/categories/基础.json"}],"tags":[{"name":"数学","slug":"数学","count":5,"path":"api/tags/数学.json"}],"author":{"name":"ZV","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"致过去的时光","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"R 语言知识点杂记","uid":"7c42f8de2051f2a0424b2125ac8f5fc7","slug":"R语言知识点杂记","date":"2020-03-17T00:00:00.000Z","updated":"2021-06-22T10:16:30.101Z","comments":true,"path":"api/articles/R语言知识点杂记.json","keywords":"👨‍💻🎸🍺","cover":[],"text":"数据类型 Vectors (one dimensional array): can hold numeric, character or logical values. The elements in a vector all have the same data type. M...","link":"","photos":[],"count_time":{"symbolsCount":"3.6k","symbolsTime":"3 mins."},"categories":[{"name":"拓展","slug":"拓展","count":10,"path":"api/categories/拓展.json"}],"tags":[{"name":"R","slug":"R","count":2,"path":"api/tags/R.json"}],"author":{"name":"ZV","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"致过去的时光","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}