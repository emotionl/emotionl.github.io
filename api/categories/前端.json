{"name":"前端","slug":"前端","count":17,"postlist":[{"title":"字符串的比较","uid":"7439e52dfcec57c3f9d78c17402f5261","slug":"字符串的比较","date":"2019-10-16T00:00:00.000Z","updated":"2021-06-22T10:16:30.101Z","comments":true,"path":"api/articles/字符串的比较.json","keywords":"👨‍💻🎸🍺","cover":null,"text":"初次碰到 &#39;100&#39; &gt; &#39;99&#39; 这个问题的时候还是有点懵逼的，因为这种比较也不涉及之前所想的隐式类型转换， 通过几次试验，发现JS中字符串与字符串比较是根据第一个不同的字符的ASCii值码进行比较的。 举个例子 &#39;100&#39;...","link":"","photos":[],"count_time":{"symbolsCount":567,"symbolsTime":"1 mins."},"categories":[{"name":"前端","slug":"前端","count":17,"path":"api/categories/前端.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":14,"path":"api/tags/JavaScript.json"}],"author":{"name":"ZV","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"致过去的时光","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"移动Web开发","uid":"f7ee095c73b7adf12560106c216e64a2","slug":"移动Web开发","date":"2019-12-25T00:00:00.000Z","updated":"2021-06-22T10:16:30.101Z","comments":true,"path":"api/articles/移动Web开发.json","keywords":"👨‍💻🎸🍺","cover":null,"text":" 运行在手机端的 Web页面（H5页面） 跨平台 基于Webview 告别IE拥抱Webkit 更好的适配和性能要求 常见移动web适配方法PC 960px / 1000px 居中 盒子模型，定高，定宽 display:inline-block 移动web 定高，宽度百分比 Fl...","link":"","photos":[],"count_time":{"symbolsCount":"2.7k","symbolsTime":"2 mins."},"categories":[{"name":"前端","slug":"前端","count":17,"path":"api/categories/前端.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":14,"path":"api/tags/JavaScript.json"},{"name":"移动端","slug":"移动端","count":1,"path":"api/tags/移动端.json"},{"name":"CSS","slug":"CSS","count":1,"path":"api/tags/CSS.json"}],"author":{"name":"ZV","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"致过去的时光","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"前端项目中的路径解析","uid":"78228826ae557ad432664d25fe0da568","slug":"前端项目中的路径解析","date":"2019-11-21T00:00:00.000Z","updated":"2021-06-22T10:16:30.101Z","comments":true,"path":"api/articles/前端项目中的路径解析.json","keywords":"👨‍💻🎸🍺","cover":null,"text":"这里说的路径解析分两种 Webpack打包配置项中的 alias jsconfig.json中的 compilerOptions Webpack 打包配置项中的 alias相信很多人都很喜欢这个配置，因为在引用其他目录下的文件时，通过 ./../utils/tools.js这种写...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"前端","slug":"前端","count":17,"path":"api/categories/前端.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":14,"path":"api/tags/JavaScript.json"},{"name":"Webpack","slug":"Webpack","count":1,"path":"api/tags/Webpack.json"}],"author":{"name":"ZV","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"致过去的时光","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"我的 Prettier 设置","uid":"af499e5c88a505a2fc70dcdaa2ef43a0","slug":"我的Prettier配置","date":"2019-12-19T00:00:00.000Z","updated":"2021-06-22T10:16:30.101Z","comments":true,"path":"api/articles/我的Prettier配置.json","keywords":"👨‍💻🎸🍺","cover":null,"text":"在项目根目录中添加.prettierrc &#123; &quot;arrowParens&quot;: &quot;avoid&quot;, &quot;bracketSpacing&quot;: true, &quot;htmlWhitespaceSensitivity&qu...","link":"","photos":[],"count_time":{"symbolsCount":856,"symbolsTime":"1 mins."},"categories":[{"name":"前端","slug":"前端","count":17,"path":"api/categories/前端.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":14,"path":"api/tags/JavaScript.json"}],"author":{"name":"ZV","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"致过去的时光","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Better-Scroll使用小例子","uid":"82b2c0d9626305e58241dff00b52469b","slug":"Better-Scroll使用小例子","date":"2020-04-03T00:00:00.000Z","updated":"2021-06-22T10:16:30.101Z","comments":true,"path":"api/articles/Better-Scroll使用小例子.json","keywords":"👨‍💻🎸🍺","cover":null,"text":"&lt;!DOCTYPE html&gt; &lt;html lang&#x3D;&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt; &lt;meta name&#x3D;&quo...","link":"","photos":[],"count_time":{"symbolsCount":"2.9k","symbolsTime":"3 mins."},"categories":[{"name":"前端","slug":"前端","count":17,"path":"api/categories/前端.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":14,"path":"api/tags/JavaScript.json"}],"author":{"name":"ZV","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"致过去的时光","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"面向对象和原型","uid":"ee82dc5d42257715d56dbfc6d3d2929b","slug":"面向对象和原型","date":"2020-05-29T00:00:00.000Z","updated":"2021-06-22T10:16:30.101Z","comments":true,"path":"api/articles/面向对象和原型.json","keywords":"👨‍💻🎸🍺","cover":null,"text":"实现 new 操作首先，我们先来看看new操作起了什么作用 &#x2F;&#x2F; 构造函数 People (无显式返回值) function People(name, age) &#123; this.name &#x3D; name this.age &#x3D; age ...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"前端","slug":"前端","count":17,"path":"api/categories/前端.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":14,"path":"api/tags/JavaScript.json"}],"author":{"name":"ZV","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"致过去的时光","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"分析一道「微信」面试题","uid":"b713a5ec769cb744eeaf48bdf6c140c9","slug":"分析一道「微信」面试题","date":"2020-06-05T00:00:00.000Z","updated":"2021-06-22T10:16:30.101Z","comments":true,"path":"api/articles/分析一道「微信」面试题.json","keywords":"👨‍💻🎸🍺","cover":null,"text":"题目：实现一个 LazyMan，按照以下方式调用时，得到相关输出： LazyMan(&#39;Hank&#39;) &#x2F;&#x2F; Hi! This is Hank! LazyMan(&#39;Hank&#39;).sleep(10).eat(&#39;dinner&#...","link":"","photos":[],"count_time":{"symbolsCount":"3.9k","symbolsTime":"4 mins."},"categories":[{"name":"前端","slug":"前端","count":17,"path":"api/categories/前端.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":14,"path":"api/tags/JavaScript.json"}],"author":{"name":"ZV","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"致过去的时光","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"百度地图与React","uid":"ddc597ec7f043c7134b0654946012fa0","slug":"百度地图与React","date":"2020-07-21T00:00:00.000Z","updated":"2021-06-22T10:16:30.101Z","comments":true,"path":"api/articles/百度地图与React.json","keywords":"👨‍💻🎸🍺","cover":null,"text":"WEB 端文档 JavaScript API 微信小程序 JavaScript API 地铁图 JavaScript API 位置数据可视化 MapV GL 与 React 结合以 JavaScript API GL v1.0 版本的 SDK为例 首先在public\\index....","link":"","photos":[],"count_time":{"symbolsCount":"2.9k","symbolsTime":"3 mins."},"categories":[{"name":"前端","slug":"前端","count":17,"path":"api/categories/前端.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":14,"path":"api/tags/JavaScript.json"},{"name":"React","slug":"React","count":1,"path":"api/tags/React.json"}],"author":{"name":"ZV","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"致过去的时光","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"复习一下Generator的使用","uid":"c1e7e740a56d87809715d43780d153ea","slug":"复习一下Generator的使用","date":"2020-08-25T00:00:00.000Z","updated":"2021-06-22T10:16:30.101Z","comments":true,"path":"api/articles/复习一下Generator的使用.json","keywords":"👨‍💻🎸🍺","cover":null,"text":"先来个例题 看一下结果 function* addGen(x) &#123; let y &#x3D; (yield x + 5) * 2 let z &#x3D; yield y &#x2F; 4 return x + y + z &#125; let g &#x3D; add...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"前端","slug":"前端","count":17,"path":"api/categories/前端.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":14,"path":"api/tags/JavaScript.json"}],"author":{"name":"ZV","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"致过去的时光","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"试试 Proxy 和 Reflect","uid":"391e5379613c514b7c0c8a55534d752c","slug":"试试 Proxy 和 Reflect","date":"2020-08-26T00:00:00.000Z","updated":"2021-06-22T10:16:30.101Z","comments":true,"path":"api/articles/试试 Proxy 和 Reflect.json","keywords":"👨‍💻🎸🍺","cover":null,"text":"Proxy使用 Object.defineProperty()模拟Vue的数据绑定 class VData &#123; constructor(&#123; data &#125;) &#123; this.data &#x3D; data this.bindData(data...","link":"","photos":[],"count_time":{"symbolsCount":"4.6k","symbolsTime":"4 mins."},"categories":[{"name":"前端","slug":"前端","count":17,"path":"api/categories/前端.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":14,"path":"api/tags/JavaScript.json"}],"author":{"name":"ZV","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"致过去的时光","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"使用nvm管理Node.js版本","uid":"923873964bedc6d39520ffd3396ca0ce","slug":"使用nvm管理Node-js版本","date":"2021-01-07T17:12:09.000Z","updated":"2021-06-22T10:16:30.101Z","comments":true,"path":"api/articles/使用nvm管理Node-js版本.json","keywords":"👨‍💻🎸🍺","cover":null,"text":"背景在实验 Vue3 的时候，提示 Error: Cannot find module &#39;vue-loader-v16/package.json&#39;，排查后发现是Node.js npm的问题于是安装了最新的 14.15.4 LTS，但是在解决完 Vue3的问题后，使...","link":"","photos":[],"count_time":{"symbolsCount":681,"symbolsTime":"1 mins."},"categories":[{"name":"前端","slug":"前端","count":17,"path":"api/categories/前端.json"}],"tags":[{"name":"Node.js","slug":"Node-js","count":2,"path":"api/tags/Node-js.json"}],"author":{"name":"ZV","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"致过去的时光","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"一网打尽this","uid":"b88101b328f136c8f25d5c4f4b2521da","slug":"一网打尽this","date":"2021-01-24T21:06:53.000Z","updated":"2021-06-22T10:16:30.101Z","comments":true,"path":"api/articles/一网打尽this.json","keywords":"👨‍💻🎸🍺","cover":null,"text":"例题组合 1：全局环境下的 thisfunction f1() &#123; console.log(this) &#125; function f2() &#123; &#39;use strict&#39; console.log(this) &#125; f1() &#x2...","link":"","photos":[],"count_time":{"symbolsCount":"4.7k","symbolsTime":"4 mins."},"categories":[{"name":"前端","slug":"前端","count":17,"path":"api/categories/前端.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":14,"path":"api/tags/JavaScript.json"}],"author":{"name":"ZV","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"致过去的时光","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"单例模式","uid":"5e422a9b2c69bd7294ec71b84cbbb53b","slug":"单例模式","date":"2021-03-02T00:47:39.000Z","updated":"2021-06-22T10:16:30.101Z","comments":true,"path":"api/articles/单例模式.json","keywords":"👨‍💻🎸🍺","cover":null,"text":"代码实现以数据库连接为例简单实现一个单例 class Database &#123; constructor(options) &#123; this.options &#x3D; options &#125; getConnection() &#123; console.log...","link":"","photos":[],"count_time":{"symbolsCount":"3.2k","symbolsTime":"3 mins."},"categories":[{"name":"前端","slug":"前端","count":17,"path":"api/categories/前端.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":14,"path":"api/tags/JavaScript.json"},{"name":"设计模式","slug":"设计模式","count":1,"path":"api/tags/设计模式.json"}],"author":{"name":"ZV","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"致过去的时光","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"JS的三种继承","uid":"a5b603fdecca7f9969a0f73abd417029","slug":"JS的三种继承","date":"2021-04-17T11:04:48.000Z","updated":"2021-06-22T10:16:30.101Z","comments":true,"path":"api/articles/JS的三种继承.json","keywords":"👨‍💻🎸🍺","cover":null,"text":"ES6 Classclass Person &#123; constructor(name, age) &#123; this.name &#x3D; name this.age &#x3D; age &#125; getInfo() &#123; return &#96;nam...","link":"","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[{"name":"前端","slug":"前端","count":17,"path":"api/categories/前端.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":14,"path":"api/tags/JavaScript.json"}],"author":{"name":"ZV","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"致过去的时光","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"对象链接的方法","uid":"0ec65ba286b3197dc2b4ec62da6fde2a","slug":"对象链接的方法","date":"2021-04-10T11:26:01.000Z","updated":"2021-06-22T10:16:30.101Z","comments":true,"path":"api/articles/对象链接的方法.json","keywords":"👨‍💻🎸🍺","cover":null,"text":"对象链接也叫 OLOO ( Objects Linked to Other Objects )， 说的直白一点就是对象 A 链接对象 B，对象 A 可以访问对象 B 的属性和方法。 举个🌰，我们创建一个工具对象 BasicFormatter，然后通过不同的方式创建可以访问 Bas...","link":"","photos":[],"count_time":{"symbolsCount":802,"symbolsTime":"1 mins."},"categories":[{"name":"前端","slug":"前端","count":17,"path":"api/categories/前端.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":14,"path":"api/tags/JavaScript.json"}],"author":{"name":"ZV","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"致过去的时光","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Vite 在开发模式使用 HTTPS","uid":"4463bcb580e6af97fe7a8a01ae296a7e","slug":"Vite-HTTPS","date":"2021-06-21T03:06:53.000Z","updated":"2021-06-22T10:16:30.101Z","comments":true,"path":"api/articles/Vite-HTTPS.json","keywords":"👨‍💻🎸🍺","cover":null,"text":"在使用 Vite 进行前端开发的过程中，有时需要模拟一下 HTTPS 的环境（比如开启 PWA），但是如果直接设置server.https = true，浏览器会报您的连接不是私密连接这样的警告，那么该怎么做呢？ 仔细的查看了下文档，发现已经说的很清晰了server.https这...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"前端","slug":"前端","count":17,"path":"api/categories/前端.json"}],"tags":[{"name":"Vite","slug":"Vite","count":1,"path":"api/tags/Vite.json"}],"author":{"name":"ZV","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"致过去的时光","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"前端开发规范","uid":"2afb485f1ca3d275b575e077ea3a1ee9","slug":"前端开发规范","date":"2021-01-25T10:31:16.000Z","updated":"2021-06-22T10:16:30.101Z","comments":true,"path":"api/articles/前端开发规范.json","keywords":"👨‍💻🎸🍺","cover":null,"text":" 此规范基于 阿里前端开发规范 | Tim 并结合实际项目进行部分修改 一、编程规约(一) 命名规范1.1.1 项目命名全部采用小写方式， 以中划线分隔。 正例：mall-management-system 反例：mall_management-system / mallMana...","link":"","photos":[],"count_time":{"symbolsCount":"21k","symbolsTime":"19 mins."},"categories":[{"name":"前端","slug":"前端","count":17,"path":"api/categories/前端.json"}],"tags":[{"name":"规范","slug":"规范","count":1,"path":"api/tags/规范.json"}],"author":{"name":"ZV","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"致过去的时光","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}]}